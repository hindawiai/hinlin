<शैली गुरु>
// SPDX-License-Identअगरier: GPL-2.0

// Generated by scripts/atomic/gen-atomic-fallback.sh
// DO NOT MODIFY THIS खाता सूचीECTLY

#अगर_अघोषित _LINUX_ATOMIC_FALLBACK_H
#घोषणा _LINUX_ATOMIC_FALLBACK_H

#समावेश <linux/compiler.h>

#अगर_अघोषित xchg_relaxed
#घोषणा xchg_acquire xchg
#घोषणा xchg_release xchg
#घोषणा xchg_relaxed xchg
#अन्यथा /* xchg_relaxed */

#अगर_अघोषित xchg_acquire
#घोषणा xchg_acquire(...) \
	__atomic_op_acquire(xchg, __VA_ARGS__)
#पूर्ण_अगर

#अगर_अघोषित xchg_release
#घोषणा xchg_release(...) \
	__atomic_op_release(xchg, __VA_ARGS__)
#पूर्ण_अगर

#अगर_अघोषित xchg
#घोषणा xchg(...) \
	__atomic_op_fence(xchg, __VA_ARGS__)
#पूर्ण_अगर

#पूर्ण_अगर /* xchg_relaxed */

#अगर_अघोषित cmpxchg_relaxed
#घोषणा cmpxchg_acquire cmpxchg
#घोषणा cmpxchg_release cmpxchg
#घोषणा cmpxchg_relaxed cmpxchg
#अन्यथा /* cmpxchg_relaxed */

#अगर_अघोषित cmpxchg_acquire
#घोषणा cmpxchg_acquire(...) \
	__atomic_op_acquire(cmpxchg, __VA_ARGS__)
#पूर्ण_अगर

#अगर_अघोषित cmpxchg_release
#घोषणा cmpxchg_release(...) \
	__atomic_op_release(cmpxchg, __VA_ARGS__)
#पूर्ण_अगर

#अगर_अघोषित cmpxchg
#घोषणा cmpxchg(...) \
	__atomic_op_fence(cmpxchg, __VA_ARGS__)
#पूर्ण_अगर

#पूर्ण_अगर /* cmpxchg_relaxed */

#अगर_अघोषित cmpxchg64_relaxed
#घोषणा cmpxchg64_acquire cmpxchg64
#घोषणा cmpxchg64_release cmpxchg64
#घोषणा cmpxchg64_relaxed cmpxchg64
#अन्यथा /* cmpxchg64_relaxed */

#अगर_अघोषित cmpxchg64_acquire
#घोषणा cmpxchg64_acquire(...) \
	__atomic_op_acquire(cmpxchg64, __VA_ARGS__)
#पूर्ण_अगर

#अगर_अघोषित cmpxchg64_release
#घोषणा cmpxchg64_release(...) \
	__atomic_op_release(cmpxchg64, __VA_ARGS__)
#पूर्ण_अगर

#अगर_अघोषित cmpxchg64
#घोषणा cmpxchg64(...) \
	__atomic_op_fence(cmpxchg64, __VA_ARGS__)
#पूर्ण_अगर

#पूर्ण_अगर /* cmpxchg64_relaxed */

#अगर_अघोषित try_cmpxchg_relaxed
#अगर_घोषित try_cmpxchg
#घोषणा try_cmpxchg_acquire try_cmpxchg
#घोषणा try_cmpxchg_release try_cmpxchg
#घोषणा try_cmpxchg_relaxed try_cmpxchg
#पूर्ण_अगर /* try_cmpxchg */

#अगर_अघोषित try_cmpxchg
#घोषणा try_cmpxchg(_ptr, _oldp, _new) \
(अणु \
	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
	___r = cmpxchg((_ptr), ___o, (_new)); \
	अगर (unlikely(___r != ___o)) \
		*___op = ___r; \
	likely(___r == ___o); \
पूर्ण)
#पूर्ण_अगर /* try_cmpxchg */

#अगर_अघोषित try_cmpxchg_acquire
#घोषणा try_cmpxchg_acquire(_ptr, _oldp, _new) \
(अणु \
	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
	___r = cmpxchg_acquire((_ptr), ___o, (_new)); \
	अगर (unlikely(___r != ___o)) \
		*___op = ___r; \
	likely(___r == ___o); \
पूर्ण)
#पूर्ण_अगर /* try_cmpxchg_acquire */

#अगर_अघोषित try_cmpxchg_release
#घोषणा try_cmpxchg_release(_ptr, _oldp, _new) \
(अणु \
	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
	___r = cmpxchg_release((_ptr), ___o, (_new)); \
	अगर (unlikely(___r != ___o)) \
		*___op = ___r; \
	likely(___r == ___o); \
पूर्ण)
#पूर्ण_अगर /* try_cmpxchg_release */

#अगर_अघोषित try_cmpxchg_relaxed
#घोषणा try_cmpxchg_relaxed(_ptr, _oldp, _new) \
(अणु \
	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
	___r = cmpxchg_relaxed((_ptr), ___o, (_new)); \
	अगर (unlikely(___r != ___o)) \
		*___op = ___r; \
	likely(___r == ___o); \
पूर्ण)
#पूर्ण_अगर /* try_cmpxchg_relaxed */

#अन्यथा /* try_cmpxchg_relaxed */

#अगर_अघोषित try_cmpxchg_acquire
#घोषणा try_cmpxchg_acquire(...) \
	__atomic_op_acquire(try_cmpxchg, __VA_ARGS__)
#पूर्ण_अगर

#अगर_अघोषित try_cmpxchg_release
#घोषणा try_cmpxchg_release(...) \
	__atomic_op_release(try_cmpxchg, __VA_ARGS__)
#पूर्ण_अगर

#अगर_अघोषित try_cmpxchg
#घोषणा try_cmpxchg(...) \
	__atomic_op_fence(try_cmpxchg, __VA_ARGS__)
#पूर्ण_अगर

#पूर्ण_अगर /* try_cmpxchg_relaxed */

#घोषणा arch_atomic_पढ़ो atomic_पढ़ो
#घोषणा arch_atomic_पढ़ो_acquire atomic_पढ़ो_acquire

#अगर_अघोषित atomic_पढ़ो_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_पढ़ो_acquire(स्थिर atomic_t *v)
अणु
	वापस smp_load_acquire(&(v)->counter);
पूर्ण
#घोषणा atomic_पढ़ो_acquire atomic_पढ़ो_acquire
#पूर्ण_अगर

#घोषणा arch_atomic_set atomic_set
#घोषणा arch_atomic_set_release atomic_set_release

#अगर_अघोषित atomic_set_release
अटल __always_अंतरभूत व्योम
atomic_set_release(atomic_t *v, पूर्णांक i)
अणु
	smp_store_release(&(v)->counter, i);
पूर्ण
#घोषणा atomic_set_release atomic_set_release
#पूर्ण_अगर

#घोषणा arch_atomic_add atomic_add

#घोषणा arch_atomic_add_वापस atomic_add_वापस
#घोषणा arch_atomic_add_वापस_acquire atomic_add_वापस_acquire
#घोषणा arch_atomic_add_वापस_release atomic_add_वापस_release
#घोषणा arch_atomic_add_वापस_relaxed atomic_add_वापस_relaxed

#अगर_अघोषित atomic_add_वापस_relaxed
#घोषणा atomic_add_वापस_acquire atomic_add_वापस
#घोषणा atomic_add_वापस_release atomic_add_वापस
#घोषणा atomic_add_वापस_relaxed atomic_add_वापस
#अन्यथा /* atomic_add_वापस_relaxed */

#अगर_अघोषित atomic_add_वापस_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_add_वापस_acquire(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret = atomic_add_वापस_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_add_वापस_acquire atomic_add_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_add_वापस_release
अटल __always_अंतरभूत पूर्णांक
atomic_add_वापस_release(पूर्णांक i, atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_add_वापस_relaxed(i, v);
पूर्ण
#घोषणा atomic_add_वापस_release atomic_add_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic_add_वापस
अटल __always_अंतरभूत पूर्णांक
atomic_add_वापस(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_add_वापस_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_add_वापस atomic_add_वापस
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_add_वापस_relaxed */

#घोषणा arch_atomic_fetch_add atomic_fetch_add
#घोषणा arch_atomic_fetch_add_acquire atomic_fetch_add_acquire
#घोषणा arch_atomic_fetch_add_release atomic_fetch_add_release
#घोषणा arch_atomic_fetch_add_relaxed atomic_fetch_add_relaxed

#अगर_अघोषित atomic_fetch_add_relaxed
#घोषणा atomic_fetch_add_acquire atomic_fetch_add
#घोषणा atomic_fetch_add_release atomic_fetch_add
#घोषणा atomic_fetch_add_relaxed atomic_fetch_add
#अन्यथा /* atomic_fetch_add_relaxed */

#अगर_अघोषित atomic_fetch_add_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_add_acquire(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret = atomic_fetch_add_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_add_acquire atomic_fetch_add_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_add_release
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_add_release(पूर्णांक i, atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_fetch_add_relaxed(i, v);
पूर्ण
#घोषणा atomic_fetch_add_release atomic_fetch_add_release
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_add
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_add(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_fetch_add_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_add atomic_fetch_add
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_fetch_add_relaxed */

#घोषणा arch_atomic_sub atomic_sub

#घोषणा arch_atomic_sub_वापस atomic_sub_वापस
#घोषणा arch_atomic_sub_वापस_acquire atomic_sub_वापस_acquire
#घोषणा arch_atomic_sub_वापस_release atomic_sub_वापस_release
#घोषणा arch_atomic_sub_वापस_relaxed atomic_sub_वापस_relaxed

#अगर_अघोषित atomic_sub_वापस_relaxed
#घोषणा atomic_sub_वापस_acquire atomic_sub_वापस
#घोषणा atomic_sub_वापस_release atomic_sub_वापस
#घोषणा atomic_sub_वापस_relaxed atomic_sub_वापस
#अन्यथा /* atomic_sub_वापस_relaxed */

#अगर_अघोषित atomic_sub_वापस_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_sub_वापस_acquire(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret = atomic_sub_वापस_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_sub_वापस_acquire atomic_sub_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_sub_वापस_release
अटल __always_अंतरभूत पूर्णांक
atomic_sub_वापस_release(पूर्णांक i, atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_sub_वापस_relaxed(i, v);
पूर्ण
#घोषणा atomic_sub_वापस_release atomic_sub_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic_sub_वापस
अटल __always_अंतरभूत पूर्णांक
atomic_sub_वापस(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_sub_वापस_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_sub_वापस atomic_sub_वापस
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_sub_वापस_relaxed */

#घोषणा arch_atomic_fetch_sub atomic_fetch_sub
#घोषणा arch_atomic_fetch_sub_acquire atomic_fetch_sub_acquire
#घोषणा arch_atomic_fetch_sub_release atomic_fetch_sub_release
#घोषणा arch_atomic_fetch_sub_relaxed atomic_fetch_sub_relaxed

#अगर_अघोषित atomic_fetch_sub_relaxed
#घोषणा atomic_fetch_sub_acquire atomic_fetch_sub
#घोषणा atomic_fetch_sub_release atomic_fetch_sub
#घोषणा atomic_fetch_sub_relaxed atomic_fetch_sub
#अन्यथा /* atomic_fetch_sub_relaxed */

#अगर_अघोषित atomic_fetch_sub_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_sub_acquire(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret = atomic_fetch_sub_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_sub_acquire atomic_fetch_sub_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_sub_release
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_sub_release(पूर्णांक i, atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_fetch_sub_relaxed(i, v);
पूर्ण
#घोषणा atomic_fetch_sub_release atomic_fetch_sub_release
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_sub
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_sub(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_fetch_sub_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_sub atomic_fetch_sub
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_fetch_sub_relaxed */

#घोषणा arch_atomic_inc atomic_inc

#अगर_अघोषित atomic_inc
अटल __always_अंतरभूत व्योम
atomic_inc(atomic_t *v)
अणु
	atomic_add(1, v);
पूर्ण
#घोषणा atomic_inc atomic_inc
#पूर्ण_अगर

#घोषणा arch_atomic_inc_वापस atomic_inc_वापस
#घोषणा arch_atomic_inc_वापस_acquire atomic_inc_वापस_acquire
#घोषणा arch_atomic_inc_वापस_release atomic_inc_वापस_release
#घोषणा arch_atomic_inc_वापस_relaxed atomic_inc_वापस_relaxed

#अगर_अघोषित atomic_inc_वापस_relaxed
#अगर_घोषित atomic_inc_वापस
#घोषणा atomic_inc_वापस_acquire atomic_inc_वापस
#घोषणा atomic_inc_वापस_release atomic_inc_वापस
#घोषणा atomic_inc_वापस_relaxed atomic_inc_वापस
#पूर्ण_अगर /* atomic_inc_वापस */

#अगर_अघोषित atomic_inc_वापस
अटल __always_अंतरभूत पूर्णांक
atomic_inc_वापस(atomic_t *v)
अणु
	वापस atomic_add_वापस(1, v);
पूर्ण
#घोषणा atomic_inc_वापस atomic_inc_वापस
#पूर्ण_अगर

#अगर_अघोषित atomic_inc_वापस_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_inc_वापस_acquire(atomic_t *v)
अणु
	वापस atomic_add_वापस_acquire(1, v);
पूर्ण
#घोषणा atomic_inc_वापस_acquire atomic_inc_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_inc_वापस_release
अटल __always_अंतरभूत पूर्णांक
atomic_inc_वापस_release(atomic_t *v)
अणु
	वापस atomic_add_वापस_release(1, v);
पूर्ण
#घोषणा atomic_inc_वापस_release atomic_inc_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic_inc_वापस_relaxed
अटल __always_अंतरभूत पूर्णांक
atomic_inc_वापस_relaxed(atomic_t *v)
अणु
	वापस atomic_add_वापस_relaxed(1, v);
पूर्ण
#घोषणा atomic_inc_वापस_relaxed atomic_inc_वापस_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic_inc_वापस_relaxed */

#अगर_अघोषित atomic_inc_वापस_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_inc_वापस_acquire(atomic_t *v)
अणु
	पूर्णांक ret = atomic_inc_वापस_relaxed(v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_inc_वापस_acquire atomic_inc_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_inc_वापस_release
अटल __always_अंतरभूत पूर्णांक
atomic_inc_वापस_release(atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_inc_वापस_relaxed(v);
पूर्ण
#घोषणा atomic_inc_वापस_release atomic_inc_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic_inc_वापस
अटल __always_अंतरभूत पूर्णांक
atomic_inc_वापस(atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_inc_वापस_relaxed(v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_inc_वापस atomic_inc_वापस
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_inc_वापस_relaxed */

#घोषणा arch_atomic_fetch_inc atomic_fetch_inc
#घोषणा arch_atomic_fetch_inc_acquire atomic_fetch_inc_acquire
#घोषणा arch_atomic_fetch_inc_release atomic_fetch_inc_release
#घोषणा arch_atomic_fetch_inc_relaxed atomic_fetch_inc_relaxed

#अगर_अघोषित atomic_fetch_inc_relaxed
#अगर_घोषित atomic_fetch_inc
#घोषणा atomic_fetch_inc_acquire atomic_fetch_inc
#घोषणा atomic_fetch_inc_release atomic_fetch_inc
#घोषणा atomic_fetch_inc_relaxed atomic_fetch_inc
#पूर्ण_अगर /* atomic_fetch_inc */

#अगर_अघोषित atomic_fetch_inc
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_inc(atomic_t *v)
अणु
	वापस atomic_fetch_add(1, v);
पूर्ण
#घोषणा atomic_fetch_inc atomic_fetch_inc
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_inc_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_inc_acquire(atomic_t *v)
अणु
	वापस atomic_fetch_add_acquire(1, v);
पूर्ण
#घोषणा atomic_fetch_inc_acquire atomic_fetch_inc_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_inc_release
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_inc_release(atomic_t *v)
अणु
	वापस atomic_fetch_add_release(1, v);
पूर्ण
#घोषणा atomic_fetch_inc_release atomic_fetch_inc_release
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_inc_relaxed
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_inc_relaxed(atomic_t *v)
अणु
	वापस atomic_fetch_add_relaxed(1, v);
पूर्ण
#घोषणा atomic_fetch_inc_relaxed atomic_fetch_inc_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic_fetch_inc_relaxed */

#अगर_अघोषित atomic_fetch_inc_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_inc_acquire(atomic_t *v)
अणु
	पूर्णांक ret = atomic_fetch_inc_relaxed(v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_inc_acquire atomic_fetch_inc_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_inc_release
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_inc_release(atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_fetch_inc_relaxed(v);
पूर्ण
#घोषणा atomic_fetch_inc_release atomic_fetch_inc_release
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_inc
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_inc(atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_fetch_inc_relaxed(v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_inc atomic_fetch_inc
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_fetch_inc_relaxed */

#घोषणा arch_atomic_dec atomic_dec

#अगर_अघोषित atomic_dec
अटल __always_अंतरभूत व्योम
atomic_dec(atomic_t *v)
अणु
	atomic_sub(1, v);
पूर्ण
#घोषणा atomic_dec atomic_dec
#पूर्ण_अगर

#घोषणा arch_atomic_dec_वापस atomic_dec_वापस
#घोषणा arch_atomic_dec_वापस_acquire atomic_dec_वापस_acquire
#घोषणा arch_atomic_dec_वापस_release atomic_dec_वापस_release
#घोषणा arch_atomic_dec_वापस_relaxed atomic_dec_वापस_relaxed

#अगर_अघोषित atomic_dec_वापस_relaxed
#अगर_घोषित atomic_dec_वापस
#घोषणा atomic_dec_वापस_acquire atomic_dec_वापस
#घोषणा atomic_dec_वापस_release atomic_dec_वापस
#घोषणा atomic_dec_वापस_relaxed atomic_dec_वापस
#पूर्ण_अगर /* atomic_dec_वापस */

#अगर_अघोषित atomic_dec_वापस
अटल __always_अंतरभूत पूर्णांक
atomic_dec_वापस(atomic_t *v)
अणु
	वापस atomic_sub_वापस(1, v);
पूर्ण
#घोषणा atomic_dec_वापस atomic_dec_वापस
#पूर्ण_अगर

#अगर_अघोषित atomic_dec_वापस_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_dec_वापस_acquire(atomic_t *v)
अणु
	वापस atomic_sub_वापस_acquire(1, v);
पूर्ण
#घोषणा atomic_dec_वापस_acquire atomic_dec_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_dec_वापस_release
अटल __always_अंतरभूत पूर्णांक
atomic_dec_वापस_release(atomic_t *v)
अणु
	वापस atomic_sub_वापस_release(1, v);
पूर्ण
#घोषणा atomic_dec_वापस_release atomic_dec_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic_dec_वापस_relaxed
अटल __always_अंतरभूत पूर्णांक
atomic_dec_वापस_relaxed(atomic_t *v)
अणु
	वापस atomic_sub_वापस_relaxed(1, v);
पूर्ण
#घोषणा atomic_dec_वापस_relaxed atomic_dec_वापस_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic_dec_वापस_relaxed */

#अगर_अघोषित atomic_dec_वापस_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_dec_वापस_acquire(atomic_t *v)
अणु
	पूर्णांक ret = atomic_dec_वापस_relaxed(v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_dec_वापस_acquire atomic_dec_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_dec_वापस_release
अटल __always_अंतरभूत पूर्णांक
atomic_dec_वापस_release(atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_dec_वापस_relaxed(v);
पूर्ण
#घोषणा atomic_dec_वापस_release atomic_dec_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic_dec_वापस
अटल __always_अंतरभूत पूर्णांक
atomic_dec_वापस(atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_dec_वापस_relaxed(v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_dec_वापस atomic_dec_वापस
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_dec_वापस_relaxed */

#घोषणा arch_atomic_fetch_dec atomic_fetch_dec
#घोषणा arch_atomic_fetch_dec_acquire atomic_fetch_dec_acquire
#घोषणा arch_atomic_fetch_dec_release atomic_fetch_dec_release
#घोषणा arch_atomic_fetch_dec_relaxed atomic_fetch_dec_relaxed

#अगर_अघोषित atomic_fetch_dec_relaxed
#अगर_घोषित atomic_fetch_dec
#घोषणा atomic_fetch_dec_acquire atomic_fetch_dec
#घोषणा atomic_fetch_dec_release atomic_fetch_dec
#घोषणा atomic_fetch_dec_relaxed atomic_fetch_dec
#पूर्ण_अगर /* atomic_fetch_dec */

#अगर_अघोषित atomic_fetch_dec
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_dec(atomic_t *v)
अणु
	वापस atomic_fetch_sub(1, v);
पूर्ण
#घोषणा atomic_fetch_dec atomic_fetch_dec
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_dec_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_dec_acquire(atomic_t *v)
अणु
	वापस atomic_fetch_sub_acquire(1, v);
पूर्ण
#घोषणा atomic_fetch_dec_acquire atomic_fetch_dec_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_dec_release
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_dec_release(atomic_t *v)
अणु
	वापस atomic_fetch_sub_release(1, v);
पूर्ण
#घोषणा atomic_fetch_dec_release atomic_fetch_dec_release
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_dec_relaxed
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_dec_relaxed(atomic_t *v)
अणु
	वापस atomic_fetch_sub_relaxed(1, v);
पूर्ण
#घोषणा atomic_fetch_dec_relaxed atomic_fetch_dec_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic_fetch_dec_relaxed */

#अगर_अघोषित atomic_fetch_dec_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_dec_acquire(atomic_t *v)
अणु
	पूर्णांक ret = atomic_fetch_dec_relaxed(v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_dec_acquire atomic_fetch_dec_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_dec_release
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_dec_release(atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_fetch_dec_relaxed(v);
पूर्ण
#घोषणा atomic_fetch_dec_release atomic_fetch_dec_release
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_dec
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_dec(atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_fetch_dec_relaxed(v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_dec atomic_fetch_dec
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_fetch_dec_relaxed */

#घोषणा arch_atomic_and atomic_and

#घोषणा arch_atomic_fetch_and atomic_fetch_and
#घोषणा arch_atomic_fetch_and_acquire atomic_fetch_and_acquire
#घोषणा arch_atomic_fetch_and_release atomic_fetch_and_release
#घोषणा arch_atomic_fetch_and_relaxed atomic_fetch_and_relaxed

#अगर_अघोषित atomic_fetch_and_relaxed
#घोषणा atomic_fetch_and_acquire atomic_fetch_and
#घोषणा atomic_fetch_and_release atomic_fetch_and
#घोषणा atomic_fetch_and_relaxed atomic_fetch_and
#अन्यथा /* atomic_fetch_and_relaxed */

#अगर_अघोषित atomic_fetch_and_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_and_acquire(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret = atomic_fetch_and_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_and_acquire atomic_fetch_and_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_and_release
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_and_release(पूर्णांक i, atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_fetch_and_relaxed(i, v);
पूर्ण
#घोषणा atomic_fetch_and_release atomic_fetch_and_release
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_and
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_and(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_fetch_and_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_and atomic_fetch_and
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_fetch_and_relaxed */

#घोषणा arch_atomic_andnot atomic_andnot

#अगर_अघोषित atomic_andnot
अटल __always_अंतरभूत व्योम
atomic_andnot(पूर्णांक i, atomic_t *v)
अणु
	atomic_and(~i, v);
पूर्ण
#घोषणा atomic_andnot atomic_andnot
#पूर्ण_अगर

#घोषणा arch_atomic_fetch_andnot atomic_fetch_andnot
#घोषणा arch_atomic_fetch_andnot_acquire atomic_fetch_andnot_acquire
#घोषणा arch_atomic_fetch_andnot_release atomic_fetch_andnot_release
#घोषणा arch_atomic_fetch_andnot_relaxed atomic_fetch_andnot_relaxed

#अगर_अघोषित atomic_fetch_andnot_relaxed
#अगर_घोषित atomic_fetch_andnot
#घोषणा atomic_fetch_andnot_acquire atomic_fetch_andnot
#घोषणा atomic_fetch_andnot_release atomic_fetch_andnot
#घोषणा atomic_fetch_andnot_relaxed atomic_fetch_andnot
#पूर्ण_अगर /* atomic_fetch_andnot */

#अगर_अघोषित atomic_fetch_andnot
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_andnot(पूर्णांक i, atomic_t *v)
अणु
	वापस atomic_fetch_and(~i, v);
पूर्ण
#घोषणा atomic_fetch_andnot atomic_fetch_andnot
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_andnot_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_andnot_acquire(पूर्णांक i, atomic_t *v)
अणु
	वापस atomic_fetch_and_acquire(~i, v);
पूर्ण
#घोषणा atomic_fetch_andnot_acquire atomic_fetch_andnot_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_andnot_release
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_andnot_release(पूर्णांक i, atomic_t *v)
अणु
	वापस atomic_fetch_and_release(~i, v);
पूर्ण
#घोषणा atomic_fetch_andnot_release atomic_fetch_andnot_release
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_andnot_relaxed
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_andnot_relaxed(पूर्णांक i, atomic_t *v)
अणु
	वापस atomic_fetch_and_relaxed(~i, v);
पूर्ण
#घोषणा atomic_fetch_andnot_relaxed atomic_fetch_andnot_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic_fetch_andnot_relaxed */

#अगर_अघोषित atomic_fetch_andnot_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_andnot_acquire(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret = atomic_fetch_andnot_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_andnot_acquire atomic_fetch_andnot_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_andnot_release
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_andnot_release(पूर्णांक i, atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_fetch_andnot_relaxed(i, v);
पूर्ण
#घोषणा atomic_fetch_andnot_release atomic_fetch_andnot_release
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_andnot
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_andnot(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_fetch_andnot_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_andnot atomic_fetch_andnot
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_fetch_andnot_relaxed */

#घोषणा arch_atomic_or atomic_or

#घोषणा arch_atomic_fetch_or atomic_fetch_or
#घोषणा arch_atomic_fetch_or_acquire atomic_fetch_or_acquire
#घोषणा arch_atomic_fetch_or_release atomic_fetch_or_release
#घोषणा arch_atomic_fetch_or_relaxed atomic_fetch_or_relaxed

#अगर_अघोषित atomic_fetch_or_relaxed
#घोषणा atomic_fetch_or_acquire atomic_fetch_or
#घोषणा atomic_fetch_or_release atomic_fetch_or
#घोषणा atomic_fetch_or_relaxed atomic_fetch_or
#अन्यथा /* atomic_fetch_or_relaxed */

#अगर_अघोषित atomic_fetch_or_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_or_acquire(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret = atomic_fetch_or_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_or_acquire atomic_fetch_or_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_or_release
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_or_release(पूर्णांक i, atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_fetch_or_relaxed(i, v);
पूर्ण
#घोषणा atomic_fetch_or_release atomic_fetch_or_release
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_or
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_or(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_fetch_or_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_or atomic_fetch_or
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_fetch_or_relaxed */

#घोषणा arch_atomic_xor atomic_xor

#घोषणा arch_atomic_fetch_xor atomic_fetch_xor
#घोषणा arch_atomic_fetch_xor_acquire atomic_fetch_xor_acquire
#घोषणा arch_atomic_fetch_xor_release atomic_fetch_xor_release
#घोषणा arch_atomic_fetch_xor_relaxed atomic_fetch_xor_relaxed

#अगर_अघोषित atomic_fetch_xor_relaxed
#घोषणा atomic_fetch_xor_acquire atomic_fetch_xor
#घोषणा atomic_fetch_xor_release atomic_fetch_xor
#घोषणा atomic_fetch_xor_relaxed atomic_fetch_xor
#अन्यथा /* atomic_fetch_xor_relaxed */

#अगर_अघोषित atomic_fetch_xor_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_xor_acquire(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret = atomic_fetch_xor_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_xor_acquire atomic_fetch_xor_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_xor_release
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_xor_release(पूर्णांक i, atomic_t *v)
अणु
	__atomic_release_fence();
	वापस atomic_fetch_xor_relaxed(i, v);
पूर्ण
#घोषणा atomic_fetch_xor_release atomic_fetch_xor_release
#पूर्ण_अगर

#अगर_अघोषित atomic_fetch_xor
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_xor(पूर्णांक i, atomic_t *v)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_fetch_xor_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_fetch_xor atomic_fetch_xor
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_fetch_xor_relaxed */

#घोषणा arch_atomic_xchg atomic_xchg
#घोषणा arch_atomic_xchg_acquire atomic_xchg_acquire
#घोषणा arch_atomic_xchg_release atomic_xchg_release
#घोषणा arch_atomic_xchg_relaxed atomic_xchg_relaxed

#अगर_अघोषित atomic_xchg_relaxed
#घोषणा atomic_xchg_acquire atomic_xchg
#घोषणा atomic_xchg_release atomic_xchg
#घोषणा atomic_xchg_relaxed atomic_xchg
#अन्यथा /* atomic_xchg_relaxed */

#अगर_अघोषित atomic_xchg_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_xchg_acquire(atomic_t *v, पूर्णांक i)
अणु
	पूर्णांक ret = atomic_xchg_relaxed(v, i);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_xchg_acquire atomic_xchg_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_xchg_release
अटल __always_अंतरभूत पूर्णांक
atomic_xchg_release(atomic_t *v, पूर्णांक i)
अणु
	__atomic_release_fence();
	वापस atomic_xchg_relaxed(v, i);
पूर्ण
#घोषणा atomic_xchg_release atomic_xchg_release
#पूर्ण_अगर

#अगर_अघोषित atomic_xchg
अटल __always_अंतरभूत पूर्णांक
atomic_xchg(atomic_t *v, पूर्णांक i)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_xchg_relaxed(v, i);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_xchg atomic_xchg
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_xchg_relaxed */

#घोषणा arch_atomic_cmpxchg atomic_cmpxchg
#घोषणा arch_atomic_cmpxchg_acquire atomic_cmpxchg_acquire
#घोषणा arch_atomic_cmpxchg_release atomic_cmpxchg_release
#घोषणा arch_atomic_cmpxchg_relaxed atomic_cmpxchg_relaxed

#अगर_अघोषित atomic_cmpxchg_relaxed
#घोषणा atomic_cmpxchg_acquire atomic_cmpxchg
#घोषणा atomic_cmpxchg_release atomic_cmpxchg
#घोषणा atomic_cmpxchg_relaxed atomic_cmpxchg
#अन्यथा /* atomic_cmpxchg_relaxed */

#अगर_अघोषित atomic_cmpxchg_acquire
अटल __always_अंतरभूत पूर्णांक
atomic_cmpxchg_acquire(atomic_t *v, पूर्णांक old, पूर्णांक new)
अणु
	पूर्णांक ret = atomic_cmpxchg_relaxed(v, old, new);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_cmpxchg_acquire atomic_cmpxchg_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_cmpxchg_release
अटल __always_अंतरभूत पूर्णांक
atomic_cmpxchg_release(atomic_t *v, पूर्णांक old, पूर्णांक new)
अणु
	__atomic_release_fence();
	वापस atomic_cmpxchg_relaxed(v, old, new);
पूर्ण
#घोषणा atomic_cmpxchg_release atomic_cmpxchg_release
#पूर्ण_अगर

#अगर_अघोषित atomic_cmpxchg
अटल __always_अंतरभूत पूर्णांक
atomic_cmpxchg(atomic_t *v, पूर्णांक old, पूर्णांक new)
अणु
	पूर्णांक ret;
	__atomic_pre_full_fence();
	ret = atomic_cmpxchg_relaxed(v, old, new);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_cmpxchg atomic_cmpxchg
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_cmpxchg_relaxed */

#घोषणा arch_atomic_try_cmpxchg atomic_try_cmpxchg
#घोषणा arch_atomic_try_cmpxchg_acquire atomic_try_cmpxchg_acquire
#घोषणा arch_atomic_try_cmpxchg_release atomic_try_cmpxchg_release
#घोषणा arch_atomic_try_cmpxchg_relaxed atomic_try_cmpxchg_relaxed

#अगर_अघोषित atomic_try_cmpxchg_relaxed
#अगर_घोषित atomic_try_cmpxchg
#घोषणा atomic_try_cmpxchg_acquire atomic_try_cmpxchg
#घोषणा atomic_try_cmpxchg_release atomic_try_cmpxchg
#घोषणा atomic_try_cmpxchg_relaxed atomic_try_cmpxchg
#पूर्ण_अगर /* atomic_try_cmpxchg */

#अगर_अघोषित atomic_try_cmpxchg
अटल __always_अंतरभूत bool
atomic_try_cmpxchg(atomic_t *v, पूर्णांक *old, पूर्णांक new)
अणु
	पूर्णांक r, o = *old;
	r = atomic_cmpxchg(v, o, new);
	अगर (unlikely(r != o))
		*old = r;
	वापस likely(r == o);
पूर्ण
#घोषणा atomic_try_cmpxchg atomic_try_cmpxchg
#पूर्ण_अगर

#अगर_अघोषित atomic_try_cmpxchg_acquire
अटल __always_अंतरभूत bool
atomic_try_cmpxchg_acquire(atomic_t *v, पूर्णांक *old, पूर्णांक new)
अणु
	पूर्णांक r, o = *old;
	r = atomic_cmpxchg_acquire(v, o, new);
	अगर (unlikely(r != o))
		*old = r;
	वापस likely(r == o);
पूर्ण
#घोषणा atomic_try_cmpxchg_acquire atomic_try_cmpxchg_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_try_cmpxchg_release
अटल __always_अंतरभूत bool
atomic_try_cmpxchg_release(atomic_t *v, पूर्णांक *old, पूर्णांक new)
अणु
	पूर्णांक r, o = *old;
	r = atomic_cmpxchg_release(v, o, new);
	अगर (unlikely(r != o))
		*old = r;
	वापस likely(r == o);
पूर्ण
#घोषणा atomic_try_cmpxchg_release atomic_try_cmpxchg_release
#पूर्ण_अगर

#अगर_अघोषित atomic_try_cmpxchg_relaxed
अटल __always_अंतरभूत bool
atomic_try_cmpxchg_relaxed(atomic_t *v, पूर्णांक *old, पूर्णांक new)
अणु
	पूर्णांक r, o = *old;
	r = atomic_cmpxchg_relaxed(v, o, new);
	अगर (unlikely(r != o))
		*old = r;
	वापस likely(r == o);
पूर्ण
#घोषणा atomic_try_cmpxchg_relaxed atomic_try_cmpxchg_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic_try_cmpxchg_relaxed */

#अगर_अघोषित atomic_try_cmpxchg_acquire
अटल __always_अंतरभूत bool
atomic_try_cmpxchg_acquire(atomic_t *v, पूर्णांक *old, पूर्णांक new)
अणु
	bool ret = atomic_try_cmpxchg_relaxed(v, old, new);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_try_cmpxchg_acquire atomic_try_cmpxchg_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic_try_cmpxchg_release
अटल __always_अंतरभूत bool
atomic_try_cmpxchg_release(atomic_t *v, पूर्णांक *old, पूर्णांक new)
अणु
	__atomic_release_fence();
	वापस atomic_try_cmpxchg_relaxed(v, old, new);
पूर्ण
#घोषणा atomic_try_cmpxchg_release atomic_try_cmpxchg_release
#पूर्ण_अगर

#अगर_अघोषित atomic_try_cmpxchg
अटल __always_अंतरभूत bool
atomic_try_cmpxchg(atomic_t *v, पूर्णांक *old, पूर्णांक new)
अणु
	bool ret;
	__atomic_pre_full_fence();
	ret = atomic_try_cmpxchg_relaxed(v, old, new);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic_try_cmpxchg atomic_try_cmpxchg
#पूर्ण_अगर

#पूर्ण_अगर /* atomic_try_cmpxchg_relaxed */

#घोषणा arch_atomic_sub_and_test atomic_sub_and_test

#अगर_अघोषित atomic_sub_and_test
/**
 * atomic_sub_and_test - subtract value from variable and test result
 * @i: पूर्णांकeger value to subtract
 * @v: poपूर्णांकer of type atomic_t
 *
 * Atomically subtracts @i from @v and वापसs
 * true अगर the result is zero, or false क्रम all
 * other हालs.
 */
अटल __always_अंतरभूत bool
atomic_sub_and_test(पूर्णांक i, atomic_t *v)
अणु
	वापस atomic_sub_वापस(i, v) == 0;
पूर्ण
#घोषणा atomic_sub_and_test atomic_sub_and_test
#पूर्ण_अगर

#घोषणा arch_atomic_dec_and_test atomic_dec_and_test

#अगर_अघोषित atomic_dec_and_test
/**
 * atomic_dec_and_test - decrement and test
 * @v: poपूर्णांकer of type atomic_t
 *
 * Atomically decrements @v by 1 and
 * वापसs true अगर the result is 0, or false क्रम all other
 * हालs.
 */
अटल __always_अंतरभूत bool
atomic_dec_and_test(atomic_t *v)
अणु
	वापस atomic_dec_वापस(v) == 0;
पूर्ण
#घोषणा atomic_dec_and_test atomic_dec_and_test
#पूर्ण_अगर

#घोषणा arch_atomic_inc_and_test atomic_inc_and_test

#अगर_अघोषित atomic_inc_and_test
/**
 * atomic_inc_and_test - increment and test
 * @v: poपूर्णांकer of type atomic_t
 *
 * Atomically increments @v by 1
 * and वापसs true अगर the result is zero, or false क्रम all
 * other हालs.
 */
अटल __always_अंतरभूत bool
atomic_inc_and_test(atomic_t *v)
अणु
	वापस atomic_inc_वापस(v) == 0;
पूर्ण
#घोषणा atomic_inc_and_test atomic_inc_and_test
#पूर्ण_अगर

#घोषणा arch_atomic_add_negative atomic_add_negative

#अगर_अघोषित atomic_add_negative
/**
 * atomic_add_negative - add and test अगर negative
 * @i: पूर्णांकeger value to add
 * @v: poपूर्णांकer of type atomic_t
 *
 * Atomically adds @i to @v and वापसs true
 * अगर the result is negative, or false when
 * result is greater than or equal to zero.
 */
अटल __always_अंतरभूत bool
atomic_add_negative(पूर्णांक i, atomic_t *v)
अणु
	वापस atomic_add_वापस(i, v) < 0;
पूर्ण
#घोषणा atomic_add_negative atomic_add_negative
#पूर्ण_अगर

#घोषणा arch_atomic_fetch_add_unless atomic_fetch_add_unless

#अगर_अघोषित atomic_fetch_add_unless
/**
 * atomic_fetch_add_unless - add unless the number is alपढ़ोy a given value
 * @v: poपूर्णांकer of type atomic_t
 * @a: the amount to add to v...
 * @u: ...unless v is equal to u.
 *
 * Atomically adds @a to @v, so दीर्घ as @v was not alपढ़ोy @u.
 * Returns original value of @v
 */
अटल __always_अंतरभूत पूर्णांक
atomic_fetch_add_unless(atomic_t *v, पूर्णांक a, पूर्णांक u)
अणु
	पूर्णांक c = atomic_पढ़ो(v);

	करो अणु
		अगर (unlikely(c == u))
			अवरोध;
	पूर्ण जबतक (!atomic_try_cmpxchg(v, &c, c + a));

	वापस c;
पूर्ण
#घोषणा atomic_fetch_add_unless atomic_fetch_add_unless
#पूर्ण_अगर

#घोषणा arch_atomic_add_unless atomic_add_unless

#अगर_अघोषित atomic_add_unless
/**
 * atomic_add_unless - add unless the number is alपढ़ोy a given value
 * @v: poपूर्णांकer of type atomic_t
 * @a: the amount to add to v...
 * @u: ...unless v is equal to u.
 *
 * Atomically adds @a to @v, अगर @v was not alपढ़ोy @u.
 * Returns true अगर the addition was करोne.
 */
अटल __always_अंतरभूत bool
atomic_add_unless(atomic_t *v, पूर्णांक a, पूर्णांक u)
अणु
	वापस atomic_fetch_add_unless(v, a, u) != u;
पूर्ण
#घोषणा atomic_add_unless atomic_add_unless
#पूर्ण_अगर

#घोषणा arch_atomic_inc_not_zero atomic_inc_not_zero

#अगर_अघोषित atomic_inc_not_zero
/**
 * atomic_inc_not_zero - increment unless the number is zero
 * @v: poपूर्णांकer of type atomic_t
 *
 * Atomically increments @v by 1, अगर @v is non-zero.
 * Returns true अगर the increment was करोne.
 */
अटल __always_अंतरभूत bool
atomic_inc_not_zero(atomic_t *v)
अणु
	वापस atomic_add_unless(v, 1, 0);
पूर्ण
#घोषणा atomic_inc_not_zero atomic_inc_not_zero
#पूर्ण_अगर

#घोषणा arch_atomic_inc_unless_negative atomic_inc_unless_negative

#अगर_अघोषित atomic_inc_unless_negative
अटल __always_अंतरभूत bool
atomic_inc_unless_negative(atomic_t *v)
अणु
	पूर्णांक c = atomic_पढ़ो(v);

	करो अणु
		अगर (unlikely(c < 0))
			वापस false;
	पूर्ण जबतक (!atomic_try_cmpxchg(v, &c, c + 1));

	वापस true;
पूर्ण
#घोषणा atomic_inc_unless_negative atomic_inc_unless_negative
#पूर्ण_अगर

#घोषणा arch_atomic_dec_unless_positive atomic_dec_unless_positive

#अगर_अघोषित atomic_dec_unless_positive
अटल __always_अंतरभूत bool
atomic_dec_unless_positive(atomic_t *v)
अणु
	पूर्णांक c = atomic_पढ़ो(v);

	करो अणु
		अगर (unlikely(c > 0))
			वापस false;
	पूर्ण जबतक (!atomic_try_cmpxchg(v, &c, c - 1));

	वापस true;
पूर्ण
#घोषणा atomic_dec_unless_positive atomic_dec_unless_positive
#पूर्ण_अगर

#घोषणा arch_atomic_dec_अगर_positive atomic_dec_अगर_positive

#अगर_अघोषित atomic_dec_अगर_positive
अटल __always_अंतरभूत पूर्णांक
atomic_dec_अगर_positive(atomic_t *v)
अणु
	पूर्णांक dec, c = atomic_पढ़ो(v);

	करो अणु
		dec = c - 1;
		अगर (unlikely(dec < 0))
			अवरोध;
	पूर्ण जबतक (!atomic_try_cmpxchg(v, &c, dec));

	वापस dec;
पूर्ण
#घोषणा atomic_dec_अगर_positive atomic_dec_अगर_positive
#पूर्ण_अगर

#अगर_घोषित CONFIG_GENERIC_ATOMIC64
#समावेश <यंत्र-generic/atomic64.h>
#पूर्ण_अगर

#घोषणा arch_atomic64_पढ़ो atomic64_पढ़ो
#घोषणा arch_atomic64_पढ़ो_acquire atomic64_पढ़ो_acquire

#अगर_अघोषित atomic64_पढ़ो_acquire
अटल __always_अंतरभूत s64
atomic64_पढ़ो_acquire(स्थिर atomic64_t *v)
अणु
	वापस smp_load_acquire(&(v)->counter);
पूर्ण
#घोषणा atomic64_पढ़ो_acquire atomic64_पढ़ो_acquire
#पूर्ण_अगर

#घोषणा arch_atomic64_set atomic64_set
#घोषणा arch_atomic64_set_release atomic64_set_release

#अगर_अघोषित atomic64_set_release
अटल __always_अंतरभूत व्योम
atomic64_set_release(atomic64_t *v, s64 i)
अणु
	smp_store_release(&(v)->counter, i);
पूर्ण
#घोषणा atomic64_set_release atomic64_set_release
#पूर्ण_अगर

#घोषणा arch_atomic64_add atomic64_add

#घोषणा arch_atomic64_add_वापस atomic64_add_वापस
#घोषणा arch_atomic64_add_वापस_acquire atomic64_add_वापस_acquire
#घोषणा arch_atomic64_add_वापस_release atomic64_add_वापस_release
#घोषणा arch_atomic64_add_वापस_relaxed atomic64_add_वापस_relaxed

#अगर_अघोषित atomic64_add_वापस_relaxed
#घोषणा atomic64_add_वापस_acquire atomic64_add_वापस
#घोषणा atomic64_add_वापस_release atomic64_add_वापस
#घोषणा atomic64_add_वापस_relaxed atomic64_add_वापस
#अन्यथा /* atomic64_add_वापस_relaxed */

#अगर_अघोषित atomic64_add_वापस_acquire
अटल __always_अंतरभूत s64
atomic64_add_वापस_acquire(s64 i, atomic64_t *v)
अणु
	s64 ret = atomic64_add_वापस_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_add_वापस_acquire atomic64_add_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_add_वापस_release
अटल __always_अंतरभूत s64
atomic64_add_वापस_release(s64 i, atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_add_वापस_relaxed(i, v);
पूर्ण
#घोषणा atomic64_add_वापस_release atomic64_add_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_add_वापस
अटल __always_अंतरभूत s64
atomic64_add_वापस(s64 i, atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_add_वापस_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_add_वापस atomic64_add_वापस
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_add_वापस_relaxed */

#घोषणा arch_atomic64_fetch_add atomic64_fetch_add
#घोषणा arch_atomic64_fetch_add_acquire atomic64_fetch_add_acquire
#घोषणा arch_atomic64_fetch_add_release atomic64_fetch_add_release
#घोषणा arch_atomic64_fetch_add_relaxed atomic64_fetch_add_relaxed

#अगर_अघोषित atomic64_fetch_add_relaxed
#घोषणा atomic64_fetch_add_acquire atomic64_fetch_add
#घोषणा atomic64_fetch_add_release atomic64_fetch_add
#घोषणा atomic64_fetch_add_relaxed atomic64_fetch_add
#अन्यथा /* atomic64_fetch_add_relaxed */

#अगर_अघोषित atomic64_fetch_add_acquire
अटल __always_अंतरभूत s64
atomic64_fetch_add_acquire(s64 i, atomic64_t *v)
अणु
	s64 ret = atomic64_fetch_add_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_add_acquire atomic64_fetch_add_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_add_release
अटल __always_अंतरभूत s64
atomic64_fetch_add_release(s64 i, atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_fetch_add_relaxed(i, v);
पूर्ण
#घोषणा atomic64_fetch_add_release atomic64_fetch_add_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_add
अटल __always_अंतरभूत s64
atomic64_fetch_add(s64 i, atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_fetch_add_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_add atomic64_fetch_add
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_fetch_add_relaxed */

#घोषणा arch_atomic64_sub atomic64_sub

#घोषणा arch_atomic64_sub_वापस atomic64_sub_वापस
#घोषणा arch_atomic64_sub_वापस_acquire atomic64_sub_वापस_acquire
#घोषणा arch_atomic64_sub_वापस_release atomic64_sub_वापस_release
#घोषणा arch_atomic64_sub_वापस_relaxed atomic64_sub_वापस_relaxed

#अगर_अघोषित atomic64_sub_वापस_relaxed
#घोषणा atomic64_sub_वापस_acquire atomic64_sub_वापस
#घोषणा atomic64_sub_वापस_release atomic64_sub_वापस
#घोषणा atomic64_sub_वापस_relaxed atomic64_sub_वापस
#अन्यथा /* atomic64_sub_वापस_relaxed */

#अगर_अघोषित atomic64_sub_वापस_acquire
अटल __always_अंतरभूत s64
atomic64_sub_वापस_acquire(s64 i, atomic64_t *v)
अणु
	s64 ret = atomic64_sub_वापस_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_sub_वापस_acquire atomic64_sub_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_sub_वापस_release
अटल __always_अंतरभूत s64
atomic64_sub_वापस_release(s64 i, atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_sub_वापस_relaxed(i, v);
पूर्ण
#घोषणा atomic64_sub_वापस_release atomic64_sub_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_sub_वापस
अटल __always_अंतरभूत s64
atomic64_sub_वापस(s64 i, atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_sub_वापस_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_sub_वापस atomic64_sub_वापस
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_sub_वापस_relaxed */

#घोषणा arch_atomic64_fetch_sub atomic64_fetch_sub
#घोषणा arch_atomic64_fetch_sub_acquire atomic64_fetch_sub_acquire
#घोषणा arch_atomic64_fetch_sub_release atomic64_fetch_sub_release
#घोषणा arch_atomic64_fetch_sub_relaxed atomic64_fetch_sub_relaxed

#अगर_अघोषित atomic64_fetch_sub_relaxed
#घोषणा atomic64_fetch_sub_acquire atomic64_fetch_sub
#घोषणा atomic64_fetch_sub_release atomic64_fetch_sub
#घोषणा atomic64_fetch_sub_relaxed atomic64_fetch_sub
#अन्यथा /* atomic64_fetch_sub_relaxed */

#अगर_अघोषित atomic64_fetch_sub_acquire
अटल __always_अंतरभूत s64
atomic64_fetch_sub_acquire(s64 i, atomic64_t *v)
अणु
	s64 ret = atomic64_fetch_sub_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_sub_acquire atomic64_fetch_sub_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_sub_release
अटल __always_अंतरभूत s64
atomic64_fetch_sub_release(s64 i, atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_fetch_sub_relaxed(i, v);
पूर्ण
#घोषणा atomic64_fetch_sub_release atomic64_fetch_sub_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_sub
अटल __always_अंतरभूत s64
atomic64_fetch_sub(s64 i, atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_fetch_sub_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_sub atomic64_fetch_sub
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_fetch_sub_relaxed */

#घोषणा arch_atomic64_inc atomic64_inc

#अगर_अघोषित atomic64_inc
अटल __always_अंतरभूत व्योम
atomic64_inc(atomic64_t *v)
अणु
	atomic64_add(1, v);
पूर्ण
#घोषणा atomic64_inc atomic64_inc
#पूर्ण_अगर

#घोषणा arch_atomic64_inc_वापस atomic64_inc_वापस
#घोषणा arch_atomic64_inc_वापस_acquire atomic64_inc_वापस_acquire
#घोषणा arch_atomic64_inc_वापस_release atomic64_inc_वापस_release
#घोषणा arch_atomic64_inc_वापस_relaxed atomic64_inc_वापस_relaxed

#अगर_अघोषित atomic64_inc_वापस_relaxed
#अगर_घोषित atomic64_inc_वापस
#घोषणा atomic64_inc_वापस_acquire atomic64_inc_वापस
#घोषणा atomic64_inc_वापस_release atomic64_inc_वापस
#घोषणा atomic64_inc_वापस_relaxed atomic64_inc_वापस
#पूर्ण_अगर /* atomic64_inc_वापस */

#अगर_अघोषित atomic64_inc_वापस
अटल __always_अंतरभूत s64
atomic64_inc_वापस(atomic64_t *v)
अणु
	वापस atomic64_add_वापस(1, v);
पूर्ण
#घोषणा atomic64_inc_वापस atomic64_inc_वापस
#पूर्ण_अगर

#अगर_अघोषित atomic64_inc_वापस_acquire
अटल __always_अंतरभूत s64
atomic64_inc_वापस_acquire(atomic64_t *v)
अणु
	वापस atomic64_add_वापस_acquire(1, v);
पूर्ण
#घोषणा atomic64_inc_वापस_acquire atomic64_inc_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_inc_वापस_release
अटल __always_अंतरभूत s64
atomic64_inc_वापस_release(atomic64_t *v)
अणु
	वापस atomic64_add_वापस_release(1, v);
पूर्ण
#घोषणा atomic64_inc_वापस_release atomic64_inc_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_inc_वापस_relaxed
अटल __always_अंतरभूत s64
atomic64_inc_वापस_relaxed(atomic64_t *v)
अणु
	वापस atomic64_add_वापस_relaxed(1, v);
पूर्ण
#घोषणा atomic64_inc_वापस_relaxed atomic64_inc_वापस_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic64_inc_वापस_relaxed */

#अगर_अघोषित atomic64_inc_वापस_acquire
अटल __always_अंतरभूत s64
atomic64_inc_वापस_acquire(atomic64_t *v)
अणु
	s64 ret = atomic64_inc_वापस_relaxed(v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_inc_वापस_acquire atomic64_inc_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_inc_वापस_release
अटल __always_अंतरभूत s64
atomic64_inc_वापस_release(atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_inc_वापस_relaxed(v);
पूर्ण
#घोषणा atomic64_inc_वापस_release atomic64_inc_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_inc_वापस
अटल __always_अंतरभूत s64
atomic64_inc_वापस(atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_inc_वापस_relaxed(v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_inc_वापस atomic64_inc_वापस
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_inc_वापस_relaxed */

#घोषणा arch_atomic64_fetch_inc atomic64_fetch_inc
#घोषणा arch_atomic64_fetch_inc_acquire atomic64_fetch_inc_acquire
#घोषणा arch_atomic64_fetch_inc_release atomic64_fetch_inc_release
#घोषणा arch_atomic64_fetch_inc_relaxed atomic64_fetch_inc_relaxed

#अगर_अघोषित atomic64_fetch_inc_relaxed
#अगर_घोषित atomic64_fetch_inc
#घोषणा atomic64_fetch_inc_acquire atomic64_fetch_inc
#घोषणा atomic64_fetch_inc_release atomic64_fetch_inc
#घोषणा atomic64_fetch_inc_relaxed atomic64_fetch_inc
#पूर्ण_अगर /* atomic64_fetch_inc */

#अगर_अघोषित atomic64_fetch_inc
अटल __always_अंतरभूत s64
atomic64_fetch_inc(atomic64_t *v)
अणु
	वापस atomic64_fetch_add(1, v);
पूर्ण
#घोषणा atomic64_fetch_inc atomic64_fetch_inc
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_inc_acquire
अटल __always_अंतरभूत s64
atomic64_fetch_inc_acquire(atomic64_t *v)
अणु
	वापस atomic64_fetch_add_acquire(1, v);
पूर्ण
#घोषणा atomic64_fetch_inc_acquire atomic64_fetch_inc_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_inc_release
अटल __always_अंतरभूत s64
atomic64_fetch_inc_release(atomic64_t *v)
अणु
	वापस atomic64_fetch_add_release(1, v);
पूर्ण
#घोषणा atomic64_fetch_inc_release atomic64_fetch_inc_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_inc_relaxed
अटल __always_अंतरभूत s64
atomic64_fetch_inc_relaxed(atomic64_t *v)
अणु
	वापस atomic64_fetch_add_relaxed(1, v);
पूर्ण
#घोषणा atomic64_fetch_inc_relaxed atomic64_fetch_inc_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic64_fetch_inc_relaxed */

#अगर_अघोषित atomic64_fetch_inc_acquire
अटल __always_अंतरभूत s64
atomic64_fetch_inc_acquire(atomic64_t *v)
अणु
	s64 ret = atomic64_fetch_inc_relaxed(v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_inc_acquire atomic64_fetch_inc_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_inc_release
अटल __always_अंतरभूत s64
atomic64_fetch_inc_release(atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_fetch_inc_relaxed(v);
पूर्ण
#घोषणा atomic64_fetch_inc_release atomic64_fetch_inc_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_inc
अटल __always_अंतरभूत s64
atomic64_fetch_inc(atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_fetch_inc_relaxed(v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_inc atomic64_fetch_inc
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_fetch_inc_relaxed */

#घोषणा arch_atomic64_dec atomic64_dec

#अगर_अघोषित atomic64_dec
अटल __always_अंतरभूत व्योम
atomic64_dec(atomic64_t *v)
अणु
	atomic64_sub(1, v);
पूर्ण
#घोषणा atomic64_dec atomic64_dec
#पूर्ण_अगर

#घोषणा arch_atomic64_dec_वापस atomic64_dec_वापस
#घोषणा arch_atomic64_dec_वापस_acquire atomic64_dec_वापस_acquire
#घोषणा arch_atomic64_dec_वापस_release atomic64_dec_वापस_release
#घोषणा arch_atomic64_dec_वापस_relaxed atomic64_dec_वापस_relaxed

#अगर_अघोषित atomic64_dec_वापस_relaxed
#अगर_घोषित atomic64_dec_वापस
#घोषणा atomic64_dec_वापस_acquire atomic64_dec_वापस
#घोषणा atomic64_dec_वापस_release atomic64_dec_वापस
#घोषणा atomic64_dec_वापस_relaxed atomic64_dec_वापस
#पूर्ण_अगर /* atomic64_dec_वापस */

#अगर_अघोषित atomic64_dec_वापस
अटल __always_अंतरभूत s64
atomic64_dec_वापस(atomic64_t *v)
अणु
	वापस atomic64_sub_वापस(1, v);
पूर्ण
#घोषणा atomic64_dec_वापस atomic64_dec_वापस
#पूर्ण_अगर

#अगर_अघोषित atomic64_dec_वापस_acquire
अटल __always_अंतरभूत s64
atomic64_dec_वापस_acquire(atomic64_t *v)
अणु
	वापस atomic64_sub_वापस_acquire(1, v);
पूर्ण
#घोषणा atomic64_dec_वापस_acquire atomic64_dec_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_dec_वापस_release
अटल __always_अंतरभूत s64
atomic64_dec_वापस_release(atomic64_t *v)
अणु
	वापस atomic64_sub_वापस_release(1, v);
पूर्ण
#घोषणा atomic64_dec_वापस_release atomic64_dec_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_dec_वापस_relaxed
अटल __always_अंतरभूत s64
atomic64_dec_वापस_relaxed(atomic64_t *v)
अणु
	वापस atomic64_sub_वापस_relaxed(1, v);
पूर्ण
#घोषणा atomic64_dec_वापस_relaxed atomic64_dec_वापस_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic64_dec_वापस_relaxed */

#अगर_अघोषित atomic64_dec_वापस_acquire
अटल __always_अंतरभूत s64
atomic64_dec_वापस_acquire(atomic64_t *v)
अणु
	s64 ret = atomic64_dec_वापस_relaxed(v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_dec_वापस_acquire atomic64_dec_वापस_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_dec_वापस_release
अटल __always_अंतरभूत s64
atomic64_dec_वापस_release(atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_dec_वापस_relaxed(v);
पूर्ण
#घोषणा atomic64_dec_वापस_release atomic64_dec_वापस_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_dec_वापस
अटल __always_अंतरभूत s64
atomic64_dec_वापस(atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_dec_वापस_relaxed(v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_dec_वापस atomic64_dec_वापस
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_dec_वापस_relaxed */

#घोषणा arch_atomic64_fetch_dec atomic64_fetch_dec
#घोषणा arch_atomic64_fetch_dec_acquire atomic64_fetch_dec_acquire
#घोषणा arch_atomic64_fetch_dec_release atomic64_fetch_dec_release
#घोषणा arch_atomic64_fetch_dec_relaxed atomic64_fetch_dec_relaxed

#अगर_अघोषित atomic64_fetch_dec_relaxed
#अगर_घोषित atomic64_fetch_dec
#घोषणा atomic64_fetch_dec_acquire atomic64_fetch_dec
#घोषणा atomic64_fetch_dec_release atomic64_fetch_dec
#घोषणा atomic64_fetch_dec_relaxed atomic64_fetch_dec
#पूर्ण_अगर /* atomic64_fetch_dec */

#अगर_अघोषित atomic64_fetch_dec
अटल __always_अंतरभूत s64
atomic64_fetch_dec(atomic64_t *v)
अणु
	वापस atomic64_fetch_sub(1, v);
पूर्ण
#घोषणा atomic64_fetch_dec atomic64_fetch_dec
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_dec_acquire
अटल __always_अंतरभूत s64
atomic64_fetch_dec_acquire(atomic64_t *v)
अणु
	वापस atomic64_fetch_sub_acquire(1, v);
पूर्ण
#घोषणा atomic64_fetch_dec_acquire atomic64_fetch_dec_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_dec_release
अटल __always_अंतरभूत s64
atomic64_fetch_dec_release(atomic64_t *v)
अणु
	वापस atomic64_fetch_sub_release(1, v);
पूर्ण
#घोषणा atomic64_fetch_dec_release atomic64_fetch_dec_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_dec_relaxed
अटल __always_अंतरभूत s64
atomic64_fetch_dec_relaxed(atomic64_t *v)
अणु
	वापस atomic64_fetch_sub_relaxed(1, v);
पूर्ण
#घोषणा atomic64_fetch_dec_relaxed atomic64_fetch_dec_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic64_fetch_dec_relaxed */

#अगर_अघोषित atomic64_fetch_dec_acquire
अटल __always_अंतरभूत s64
atomic64_fetch_dec_acquire(atomic64_t *v)
अणु
	s64 ret = atomic64_fetch_dec_relaxed(v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_dec_acquire atomic64_fetch_dec_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_dec_release
अटल __always_अंतरभूत s64
atomic64_fetch_dec_release(atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_fetch_dec_relaxed(v);
पूर्ण
#घोषणा atomic64_fetch_dec_release atomic64_fetch_dec_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_dec
अटल __always_अंतरभूत s64
atomic64_fetch_dec(atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_fetch_dec_relaxed(v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_dec atomic64_fetch_dec
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_fetch_dec_relaxed */

#घोषणा arch_atomic64_and atomic64_and

#घोषणा arch_atomic64_fetch_and atomic64_fetch_and
#घोषणा arch_atomic64_fetch_and_acquire atomic64_fetch_and_acquire
#घोषणा arch_atomic64_fetch_and_release atomic64_fetch_and_release
#घोषणा arch_atomic64_fetch_and_relaxed atomic64_fetch_and_relaxed

#अगर_अघोषित atomic64_fetch_and_relaxed
#घोषणा atomic64_fetch_and_acquire atomic64_fetch_and
#घोषणा atomic64_fetch_and_release atomic64_fetch_and
#घोषणा atomic64_fetch_and_relaxed atomic64_fetch_and
#अन्यथा /* atomic64_fetch_and_relaxed */

#अगर_अघोषित atomic64_fetch_and_acquire
अटल __always_अंतरभूत s64
atomic64_fetch_and_acquire(s64 i, atomic64_t *v)
अणु
	s64 ret = atomic64_fetch_and_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_and_acquire atomic64_fetch_and_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_and_release
अटल __always_अंतरभूत s64
atomic64_fetch_and_release(s64 i, atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_fetch_and_relaxed(i, v);
पूर्ण
#घोषणा atomic64_fetch_and_release atomic64_fetch_and_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_and
अटल __always_अंतरभूत s64
atomic64_fetch_and(s64 i, atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_fetch_and_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_and atomic64_fetch_and
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_fetch_and_relaxed */

#घोषणा arch_atomic64_andnot atomic64_andnot

#अगर_अघोषित atomic64_andnot
अटल __always_अंतरभूत व्योम
atomic64_andnot(s64 i, atomic64_t *v)
अणु
	atomic64_and(~i, v);
पूर्ण
#घोषणा atomic64_andnot atomic64_andnot
#पूर्ण_अगर

#घोषणा arch_atomic64_fetch_andnot atomic64_fetch_andnot
#घोषणा arch_atomic64_fetch_andnot_acquire atomic64_fetch_andnot_acquire
#घोषणा arch_atomic64_fetch_andnot_release atomic64_fetch_andnot_release
#घोषणा arch_atomic64_fetch_andnot_relaxed atomic64_fetch_andnot_relaxed

#अगर_अघोषित atomic64_fetch_andnot_relaxed
#अगर_घोषित atomic64_fetch_andnot
#घोषणा atomic64_fetch_andnot_acquire atomic64_fetch_andnot
#घोषणा atomic64_fetch_andnot_release atomic64_fetch_andnot
#घोषणा atomic64_fetch_andnot_relaxed atomic64_fetch_andnot
#पूर्ण_अगर /* atomic64_fetch_andnot */

#अगर_अघोषित atomic64_fetch_andnot
अटल __always_अंतरभूत s64
atomic64_fetch_andnot(s64 i, atomic64_t *v)
अणु
	वापस atomic64_fetch_and(~i, v);
पूर्ण
#घोषणा atomic64_fetch_andnot atomic64_fetch_andnot
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_andnot_acquire
अटल __always_अंतरभूत s64
atomic64_fetch_andnot_acquire(s64 i, atomic64_t *v)
अणु
	वापस atomic64_fetch_and_acquire(~i, v);
पूर्ण
#घोषणा atomic64_fetch_andnot_acquire atomic64_fetch_andnot_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_andnot_release
अटल __always_अंतरभूत s64
atomic64_fetch_andnot_release(s64 i, atomic64_t *v)
अणु
	वापस atomic64_fetch_and_release(~i, v);
पूर्ण
#घोषणा atomic64_fetch_andnot_release atomic64_fetch_andnot_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_andnot_relaxed
अटल __always_अंतरभूत s64
atomic64_fetch_andnot_relaxed(s64 i, atomic64_t *v)
अणु
	वापस atomic64_fetch_and_relaxed(~i, v);
पूर्ण
#घोषणा atomic64_fetch_andnot_relaxed atomic64_fetch_andnot_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic64_fetch_andnot_relaxed */

#अगर_अघोषित atomic64_fetch_andnot_acquire
अटल __always_अंतरभूत s64
atomic64_fetch_andnot_acquire(s64 i, atomic64_t *v)
अणु
	s64 ret = atomic64_fetch_andnot_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_andnot_acquire atomic64_fetch_andnot_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_andnot_release
अटल __always_अंतरभूत s64
atomic64_fetch_andnot_release(s64 i, atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_fetch_andnot_relaxed(i, v);
पूर्ण
#घोषणा atomic64_fetch_andnot_release atomic64_fetch_andnot_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_andnot
अटल __always_अंतरभूत s64
atomic64_fetch_andnot(s64 i, atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_fetch_andnot_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_andnot atomic64_fetch_andnot
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_fetch_andnot_relaxed */

#घोषणा arch_atomic64_or atomic64_or

#घोषणा arch_atomic64_fetch_or atomic64_fetch_or
#घोषणा arch_atomic64_fetch_or_acquire atomic64_fetch_or_acquire
#घोषणा arch_atomic64_fetch_or_release atomic64_fetch_or_release
#घोषणा arch_atomic64_fetch_or_relaxed atomic64_fetch_or_relaxed

#अगर_अघोषित atomic64_fetch_or_relaxed
#घोषणा atomic64_fetch_or_acquire atomic64_fetch_or
#घोषणा atomic64_fetch_or_release atomic64_fetch_or
#घोषणा atomic64_fetch_or_relaxed atomic64_fetch_or
#अन्यथा /* atomic64_fetch_or_relaxed */

#अगर_अघोषित atomic64_fetch_or_acquire
अटल __always_अंतरभूत s64
atomic64_fetch_or_acquire(s64 i, atomic64_t *v)
अणु
	s64 ret = atomic64_fetch_or_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_or_acquire atomic64_fetch_or_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_or_release
अटल __always_अंतरभूत s64
atomic64_fetch_or_release(s64 i, atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_fetch_or_relaxed(i, v);
पूर्ण
#घोषणा atomic64_fetch_or_release atomic64_fetch_or_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_or
अटल __always_अंतरभूत s64
atomic64_fetch_or(s64 i, atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_fetch_or_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_or atomic64_fetch_or
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_fetch_or_relaxed */

#घोषणा arch_atomic64_xor atomic64_xor

#घोषणा arch_atomic64_fetch_xor atomic64_fetch_xor
#घोषणा arch_atomic64_fetch_xor_acquire atomic64_fetch_xor_acquire
#घोषणा arch_atomic64_fetch_xor_release atomic64_fetch_xor_release
#घोषणा arch_atomic64_fetch_xor_relaxed atomic64_fetch_xor_relaxed

#अगर_अघोषित atomic64_fetch_xor_relaxed
#घोषणा atomic64_fetch_xor_acquire atomic64_fetch_xor
#घोषणा atomic64_fetch_xor_release atomic64_fetch_xor
#घोषणा atomic64_fetch_xor_relaxed atomic64_fetch_xor
#अन्यथा /* atomic64_fetch_xor_relaxed */

#अगर_अघोषित atomic64_fetch_xor_acquire
अटल __always_अंतरभूत s64
atomic64_fetch_xor_acquire(s64 i, atomic64_t *v)
अणु
	s64 ret = atomic64_fetch_xor_relaxed(i, v);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_xor_acquire atomic64_fetch_xor_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_xor_release
अटल __always_अंतरभूत s64
atomic64_fetch_xor_release(s64 i, atomic64_t *v)
अणु
	__atomic_release_fence();
	वापस atomic64_fetch_xor_relaxed(i, v);
पूर्ण
#घोषणा atomic64_fetch_xor_release atomic64_fetch_xor_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_fetch_xor
अटल __always_अंतरभूत s64
atomic64_fetch_xor(s64 i, atomic64_t *v)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_fetch_xor_relaxed(i, v);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_fetch_xor atomic64_fetch_xor
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_fetch_xor_relaxed */

#घोषणा arch_atomic64_xchg atomic64_xchg
#घोषणा arch_atomic64_xchg_acquire atomic64_xchg_acquire
#घोषणा arch_atomic64_xchg_release atomic64_xchg_release
#घोषणा arch_atomic64_xchg_relaxed atomic64_xchg_relaxed

#अगर_अघोषित atomic64_xchg_relaxed
#घोषणा atomic64_xchg_acquire atomic64_xchg
#घोषणा atomic64_xchg_release atomic64_xchg
#घोषणा atomic64_xchg_relaxed atomic64_xchg
#अन्यथा /* atomic64_xchg_relaxed */

#अगर_अघोषित atomic64_xchg_acquire
अटल __always_अंतरभूत s64
atomic64_xchg_acquire(atomic64_t *v, s64 i)
अणु
	s64 ret = atomic64_xchg_relaxed(v, i);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_xchg_acquire atomic64_xchg_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_xchg_release
अटल __always_अंतरभूत s64
atomic64_xchg_release(atomic64_t *v, s64 i)
अणु
	__atomic_release_fence();
	वापस atomic64_xchg_relaxed(v, i);
पूर्ण
#घोषणा atomic64_xchg_release atomic64_xchg_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_xchg
अटल __always_अंतरभूत s64
atomic64_xchg(atomic64_t *v, s64 i)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_xchg_relaxed(v, i);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_xchg atomic64_xchg
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_xchg_relaxed */

#घोषणा arch_atomic64_cmpxchg atomic64_cmpxchg
#घोषणा arch_atomic64_cmpxchg_acquire atomic64_cmpxchg_acquire
#घोषणा arch_atomic64_cmpxchg_release atomic64_cmpxchg_release
#घोषणा arch_atomic64_cmpxchg_relaxed atomic64_cmpxchg_relaxed

#अगर_अघोषित atomic64_cmpxchg_relaxed
#घोषणा atomic64_cmpxchg_acquire atomic64_cmpxchg
#घोषणा atomic64_cmpxchg_release atomic64_cmpxchg
#घोषणा atomic64_cmpxchg_relaxed atomic64_cmpxchg
#अन्यथा /* atomic64_cmpxchg_relaxed */

#अगर_अघोषित atomic64_cmpxchg_acquire
अटल __always_अंतरभूत s64
atomic64_cmpxchg_acquire(atomic64_t *v, s64 old, s64 new)
अणु
	s64 ret = atomic64_cmpxchg_relaxed(v, old, new);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_cmpxchg_acquire atomic64_cmpxchg_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_cmpxchg_release
अटल __always_अंतरभूत s64
atomic64_cmpxchg_release(atomic64_t *v, s64 old, s64 new)
अणु
	__atomic_release_fence();
	वापस atomic64_cmpxchg_relaxed(v, old, new);
पूर्ण
#घोषणा atomic64_cmpxchg_release atomic64_cmpxchg_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_cmpxchg
अटल __always_अंतरभूत s64
atomic64_cmpxchg(atomic64_t *v, s64 old, s64 new)
अणु
	s64 ret;
	__atomic_pre_full_fence();
	ret = atomic64_cmpxchg_relaxed(v, old, new);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_cmpxchg atomic64_cmpxchg
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_cmpxchg_relaxed */

#घोषणा arch_atomic64_try_cmpxchg atomic64_try_cmpxchg
#घोषणा arch_atomic64_try_cmpxchg_acquire atomic64_try_cmpxchg_acquire
#घोषणा arch_atomic64_try_cmpxchg_release atomic64_try_cmpxchg_release
#घोषणा arch_atomic64_try_cmpxchg_relaxed atomic64_try_cmpxchg_relaxed

#अगर_अघोषित atomic64_try_cmpxchg_relaxed
#अगर_घोषित atomic64_try_cmpxchg
#घोषणा atomic64_try_cmpxchg_acquire atomic64_try_cmpxchg
#घोषणा atomic64_try_cmpxchg_release atomic64_try_cmpxchg
#घोषणा atomic64_try_cmpxchg_relaxed atomic64_try_cmpxchg
#पूर्ण_अगर /* atomic64_try_cmpxchg */

#अगर_अघोषित atomic64_try_cmpxchg
अटल __always_अंतरभूत bool
atomic64_try_cmpxchg(atomic64_t *v, s64 *old, s64 new)
अणु
	s64 r, o = *old;
	r = atomic64_cmpxchg(v, o, new);
	अगर (unlikely(r != o))
		*old = r;
	वापस likely(r == o);
पूर्ण
#घोषणा atomic64_try_cmpxchg atomic64_try_cmpxchg
#पूर्ण_अगर

#अगर_अघोषित atomic64_try_cmpxchg_acquire
अटल __always_अंतरभूत bool
atomic64_try_cmpxchg_acquire(atomic64_t *v, s64 *old, s64 new)
अणु
	s64 r, o = *old;
	r = atomic64_cmpxchg_acquire(v, o, new);
	अगर (unlikely(r != o))
		*old = r;
	वापस likely(r == o);
पूर्ण
#घोषणा atomic64_try_cmpxchg_acquire atomic64_try_cmpxchg_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_try_cmpxchg_release
अटल __always_अंतरभूत bool
atomic64_try_cmpxchg_release(atomic64_t *v, s64 *old, s64 new)
अणु
	s64 r, o = *old;
	r = atomic64_cmpxchg_release(v, o, new);
	अगर (unlikely(r != o))
		*old = r;
	वापस likely(r == o);
पूर्ण
#घोषणा atomic64_try_cmpxchg_release atomic64_try_cmpxchg_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_try_cmpxchg_relaxed
अटल __always_अंतरभूत bool
atomic64_try_cmpxchg_relaxed(atomic64_t *v, s64 *old, s64 new)
अणु
	s64 r, o = *old;
	r = atomic64_cmpxchg_relaxed(v, o, new);
	अगर (unlikely(r != o))
		*old = r;
	वापस likely(r == o);
पूर्ण
#घोषणा atomic64_try_cmpxchg_relaxed atomic64_try_cmpxchg_relaxed
#पूर्ण_अगर

#अन्यथा /* atomic64_try_cmpxchg_relaxed */

#अगर_अघोषित atomic64_try_cmpxchg_acquire
अटल __always_अंतरभूत bool
atomic64_try_cmpxchg_acquire(atomic64_t *v, s64 *old, s64 new)
अणु
	bool ret = atomic64_try_cmpxchg_relaxed(v, old, new);
	__atomic_acquire_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_try_cmpxchg_acquire atomic64_try_cmpxchg_acquire
#पूर्ण_अगर

#अगर_अघोषित atomic64_try_cmpxchg_release
अटल __always_अंतरभूत bool
atomic64_try_cmpxchg_release(atomic64_t *v, s64 *old, s64 new)
अणु
	__atomic_release_fence();
	वापस atomic64_try_cmpxchg_relaxed(v, old, new);
पूर्ण
#घोषणा atomic64_try_cmpxchg_release atomic64_try_cmpxchg_release
#पूर्ण_अगर

#अगर_अघोषित atomic64_try_cmpxchg
अटल __always_अंतरभूत bool
atomic64_try_cmpxchg(atomic64_t *v, s64 *old, s64 new)
अणु
	bool ret;
	__atomic_pre_full_fence();
	ret = atomic64_try_cmpxchg_relaxed(v, old, new);
	__atomic_post_full_fence();
	वापस ret;
पूर्ण
#घोषणा atomic64_try_cmpxchg atomic64_try_cmpxchg
#पूर्ण_अगर

#पूर्ण_अगर /* atomic64_try_cmpxchg_relaxed */

#घोषणा arch_atomic64_sub_and_test atomic64_sub_and_test

#अगर_अघोषित atomic64_sub_and_test
/**
 * atomic64_sub_and_test - subtract value from variable and test result
 * @i: पूर्णांकeger value to subtract
 * @v: poपूर्णांकer of type atomic64_t
 *
 * Atomically subtracts @i from @v and वापसs
 * true अगर the result is zero, or false क्रम all
 * other हालs.
 */
अटल __always_अंतरभूत bool
atomic64_sub_and_test(s64 i, atomic64_t *v)
अणु
	वापस atomic64_sub_वापस(i, v) == 0;
पूर्ण
#घोषणा atomic64_sub_and_test atomic64_sub_and_test
#पूर्ण_अगर

#घोषणा arch_atomic64_dec_and_test atomic64_dec_and_test

#अगर_अघोषित atomic64_dec_and_test
/**
 * atomic64_dec_and_test - decrement and test
 * @v: poपूर्णांकer of type atomic64_t
 *
 * Atomically decrements @v by 1 and
 * वापसs true अगर the result is 0, or false क्रम all other
 * हालs.
 */
अटल __always_अंतरभूत bool
atomic64_dec_and_test(atomic64_t *v)
अणु
	वापस atomic64_dec_वापस(v) == 0;
पूर्ण
#घोषणा atomic64_dec_and_test atomic64_dec_and_test
#पूर्ण_अगर

#घोषणा arch_atomic64_inc_and_test atomic64_inc_and_test

#अगर_अघोषित atomic64_inc_and_test
/**
 * atomic64_inc_and_test - increment and test
 * @v: poपूर्णांकer of type atomic64_t
 *
 * Atomically increments @v by 1
 * and वापसs true अगर the result is zero, or false क्रम all
 * other हालs.
 */
अटल __always_अंतरभूत bool
atomic64_inc_and_test(atomic64_t *v)
अणु
	वापस atomic64_inc_वापस(v) == 0;
पूर्ण
#घोषणा atomic64_inc_and_test atomic64_inc_and_test
#पूर्ण_अगर

#घोषणा arch_atomic64_add_negative atomic64_add_negative

#अगर_अघोषित atomic64_add_negative
/**
 * atomic64_add_negative - add and test अगर negative
 * @i: पूर्णांकeger value to add
 * @v: poपूर्णांकer of type atomic64_t
 *
 * Atomically adds @i to @v and वापसs true
 * अगर the result is negative, or false when
 * result is greater than or equal to zero.
 */
अटल __always_अंतरभूत bool
atomic64_add_negative(s64 i, atomic64_t *v)
अणु
	वापस atomic64_add_वापस(i, v) < 0;
पूर्ण
#घोषणा atomic64_add_negative atomic64_add_negative
#पूर्ण_अगर

#घोषणा arch_atomic64_fetch_add_unless atomic64_fetch_add_unless

#अगर_अघोषित atomic64_fetch_add_unless
/**
 * atomic64_fetch_add_unless - add unless the number is alपढ़ोy a given value
 * @v: poपूर्णांकer of type atomic64_t
 * @a: the amount to add to v...
 * @u: ...unless v is equal to u.
 *
 * Atomically adds @a to @v, so दीर्घ as @v was not alपढ़ोy @u.
 * Returns original value of @v
 */
अटल __always_अंतरभूत s64
atomic64_fetch_add_unless(atomic64_t *v, s64 a, s64 u)
अणु
	s64 c = atomic64_पढ़ो(v);

	करो अणु
		अगर (unlikely(c == u))
			अवरोध;
	पूर्ण जबतक (!atomic64_try_cmpxchg(v, &c, c + a));

	वापस c;
पूर्ण
#घोषणा atomic64_fetch_add_unless atomic64_fetch_add_unless
#पूर्ण_अगर

#घोषणा arch_atomic64_add_unless atomic64_add_unless

#अगर_अघोषित atomic64_add_unless
/**
 * atomic64_add_unless - add unless the number is alपढ़ोy a given value
 * @v: poपूर्णांकer of type atomic64_t
 * @a: the amount to add to v...
 * @u: ...unless v is equal to u.
 *
 * Atomically adds @a to @v, अगर @v was not alपढ़ोy @u.
 * Returns true अगर the addition was करोne.
 */
अटल __always_अंतरभूत bool
atomic64_add_unless(atomic64_t *v, s64 a, s64 u)
अणु
	वापस atomic64_fetch_add_unless(v, a, u) != u;
पूर्ण
#घोषणा atomic64_add_unless atomic64_add_unless
#पूर्ण_अगर

#घोषणा arch_atomic64_inc_not_zero atomic64_inc_not_zero

#अगर_अघोषित atomic64_inc_not_zero
/**
 * atomic64_inc_not_zero - increment unless the number is zero
 * @v: poपूर्णांकer of type atomic64_t
 *
 * Atomically increments @v by 1, अगर @v is non-zero.
 * Returns true अगर the increment was करोne.
 */
अटल __always_अंतरभूत bool
atomic64_inc_not_zero(atomic64_t *v)
अणु
	वापस atomic64_add_unless(v, 1, 0);
पूर्ण
#घोषणा atomic64_inc_not_zero atomic64_inc_not_zero
#पूर्ण_अगर

#घोषणा arch_atomic64_inc_unless_negative atomic64_inc_unless_negative

#अगर_अघोषित atomic64_inc_unless_negative
अटल __always_अंतरभूत bool
atomic64_inc_unless_negative(atomic64_t *v)
अणु
	s64 c = atomic64_पढ़ो(v);

	करो अणु
		अगर (unlikely(c < 0))
			वापस false;
	पूर्ण जबतक (!atomic64_try_cmpxchg(v, &c, c + 1));

	वापस true;
पूर्ण
#घोषणा atomic64_inc_unless_negative atomic64_inc_unless_negative
#पूर्ण_अगर

#घोषणा arch_atomic64_dec_unless_positive atomic64_dec_unless_positive

#अगर_अघोषित atomic64_dec_unless_positive
अटल __always_अंतरभूत bool
atomic64_dec_unless_positive(atomic64_t *v)
अणु
	s64 c = atomic64_पढ़ो(v);

	करो अणु
		अगर (unlikely(c > 0))
			वापस false;
	पूर्ण जबतक (!atomic64_try_cmpxchg(v, &c, c - 1));

	वापस true;
पूर्ण
#घोषणा atomic64_dec_unless_positive atomic64_dec_unless_positive
#पूर्ण_अगर

#घोषणा arch_atomic64_dec_अगर_positive atomic64_dec_अगर_positive

#अगर_अघोषित atomic64_dec_अगर_positive
अटल __always_अंतरभूत s64
atomic64_dec_अगर_positive(atomic64_t *v)
अणु
	s64 dec, c = atomic64_पढ़ो(v);

	करो अणु
		dec = c - 1;
		अगर (unlikely(dec < 0))
			अवरोध;
	पूर्ण जबतक (!atomic64_try_cmpxchg(v, &c, dec));

	वापस dec;
पूर्ण
#घोषणा atomic64_dec_अगर_positive atomic64_dec_अगर_positive
#पूर्ण_अगर

#पूर्ण_अगर /* _LINUX_ATOMIC_FALLBACK_H */
// d78e6c293c661c15188f0ec05bce45188c8d5892
