<शैली गुरु>
/* SPDX-License-Identअगरier: GPL-2.0-only */
/*
 * Copyright (C) 2013, 2014 ARM Limited, All Rights Reserved.
 * Author: Marc Zyngier <marc.zyngier@arm.com>
 */
#अगर_अघोषित __LINUX_IRQCHIP_ARM_GIC_V3_H
#घोषणा __LINUX_IRQCHIP_ARM_GIC_V3_H

/*
 * Distributor रेजिस्टरs. We assume we're running non-secure, with ARE
 * being set. Secure-only and non-ARE रेजिस्टरs are not described.
 */
#घोषणा GICD_CTLR			0x0000
#घोषणा GICD_TYPER			0x0004
#घोषणा GICD_IIDR			0x0008
#घोषणा GICD_TYPER2			0x000C
#घोषणा GICD_STATUSR			0x0010
#घोषणा GICD_SETSPI_NSR			0x0040
#घोषणा GICD_CLRSPI_NSR			0x0048
#घोषणा GICD_SETSPI_SR			0x0050
#घोषणा GICD_CLRSPI_SR			0x0058
#घोषणा GICD_IGROUPR			0x0080
#घोषणा GICD_ISENABLER			0x0100
#घोषणा GICD_ICENABLER			0x0180
#घोषणा GICD_ISPENDR			0x0200
#घोषणा GICD_ICPENDR			0x0280
#घोषणा GICD_ISACTIVER			0x0300
#घोषणा GICD_ICACTIVER			0x0380
#घोषणा GICD_IPRIORITYR			0x0400
#घोषणा GICD_ICFGR			0x0C00
#घोषणा GICD_IGRPMODR			0x0D00
#घोषणा GICD_NSACR			0x0E00
#घोषणा GICD_IGROUPRnE			0x1000
#घोषणा GICD_ISENABLERnE		0x1200
#घोषणा GICD_ICENABLERnE		0x1400
#घोषणा GICD_ISPENDRnE			0x1600
#घोषणा GICD_ICPENDRnE			0x1800
#घोषणा GICD_ISACTIVERnE		0x1A00
#घोषणा GICD_ICACTIVERnE		0x1C00
#घोषणा GICD_IPRIORITYRnE		0x2000
#घोषणा GICD_ICFGRnE			0x3000
#घोषणा GICD_IROUTER			0x6000
#घोषणा GICD_IROUTERnE			0x8000
#घोषणा GICD_IDREGS			0xFFD0
#घोषणा GICD_PIDR2			0xFFE8

#घोषणा ESPI_BASE_INTID			4096

/*
 * Those रेजिस्टरs are actually from GICv2, but the spec demands that they
 * are implemented as RES0 अगर ARE is 1 (which we करो in KVM's emulated GICv3).
 */
#घोषणा GICD_ITARGETSR			0x0800
#घोषणा GICD_SGIR			0x0F00
#घोषणा GICD_CPENDSGIR			0x0F10
#घोषणा GICD_SPENDSGIR			0x0F20

#घोषणा GICD_CTLR_RWP			(1U << 31)
#घोषणा GICD_CTLR_nASSGIreq		(1U << 8)
#घोषणा GICD_CTLR_DS			(1U << 6)
#घोषणा GICD_CTLR_ARE_NS		(1U << 4)
#घोषणा GICD_CTLR_ENABLE_G1A		(1U << 1)
#घोषणा GICD_CTLR_ENABLE_G1		(1U << 0)

#घोषणा GICD_IIDR_IMPLEMENTER_SHIFT	0
#घोषणा GICD_IIDR_IMPLEMENTER_MASK	(0xfff << GICD_IIDR_IMPLEMENTER_SHIFT)
#घोषणा GICD_IIDR_REVISION_SHIFT	12
#घोषणा GICD_IIDR_REVISION_MASK		(0xf << GICD_IIDR_REVISION_SHIFT)
#घोषणा GICD_IIDR_VARIANT_SHIFT		16
#घोषणा GICD_IIDR_VARIANT_MASK		(0xf << GICD_IIDR_VARIANT_SHIFT)
#घोषणा GICD_IIDR_PRODUCT_ID_SHIFT	24
#घोषणा GICD_IIDR_PRODUCT_ID_MASK	(0xff << GICD_IIDR_PRODUCT_ID_SHIFT)


/*
 * In प्रणालीs with a single security state (what we emulate in KVM)
 * the meaning of the पूर्णांकerrupt group enable bits is slightly dअगरferent
 */
#घोषणा GICD_CTLR_ENABLE_SS_G1		(1U << 1)
#घोषणा GICD_CTLR_ENABLE_SS_G0		(1U << 0)

#घोषणा GICD_TYPER_RSS			(1U << 26)
#घोषणा GICD_TYPER_LPIS			(1U << 17)
#घोषणा GICD_TYPER_MBIS			(1U << 16)
#घोषणा GICD_TYPER_ESPI			(1U << 8)

#घोषणा GICD_TYPER_ID_BITS(typer)	((((typer) >> 19) & 0x1f) + 1)
#घोषणा GICD_TYPER_NUM_LPIS(typer)	((((typer) >> 11) & 0x1f) + 1)
#घोषणा GICD_TYPER_SPIS(typer)		((((typer) & 0x1f) + 1) * 32)
#घोषणा GICD_TYPER_ESPIS(typer)						\
	(((typer) & GICD_TYPER_ESPI) ? GICD_TYPER_SPIS((typer) >> 27) : 0)

#घोषणा GICD_TYPER2_nASSGIcap		(1U << 8)
#घोषणा GICD_TYPER2_VIL			(1U << 7)
#घोषणा GICD_TYPER2_VID			GENMASK(4, 0)

#घोषणा GICD_IROUTER_SPI_MODE_ONE	(0U << 31)
#घोषणा GICD_IROUTER_SPI_MODE_ANY	(1U << 31)

#घोषणा GIC_PIDR2_ARCH_MASK		0xf0
#घोषणा GIC_PIDR2_ARCH_GICv3		0x30
#घोषणा GIC_PIDR2_ARCH_GICv4		0x40

#घोषणा GIC_V3_DIST_SIZE		0x10000

#घोषणा GIC_PAGE_SIZE_4K		0ULL
#घोषणा GIC_PAGE_SIZE_16K		1ULL
#घोषणा GIC_PAGE_SIZE_64K		2ULL
#घोषणा GIC_PAGE_SIZE_MASK		3ULL

/*
 * Re-Distributor रेजिस्टरs, offsets from RD_base
 */
#घोषणा GICR_CTLR			GICD_CTLR
#घोषणा GICR_IIDR			0x0004
#घोषणा GICR_TYPER			0x0008
#घोषणा GICR_STATUSR			GICD_STATUSR
#घोषणा GICR_WAKER			0x0014
#घोषणा GICR_SETLPIR			0x0040
#घोषणा GICR_CLRLPIR			0x0048
#घोषणा GICR_PROPBASER			0x0070
#घोषणा GICR_PENDBASER			0x0078
#घोषणा GICR_INVLPIR			0x00A0
#घोषणा GICR_INVALLR			0x00B0
#घोषणा GICR_SYNCR			0x00C0
#घोषणा GICR_IDREGS			GICD_IDREGS
#घोषणा GICR_PIDR2			GICD_PIDR2

#घोषणा GICR_CTLR_ENABLE_LPIS		(1UL << 0)
#घोषणा GICR_CTLR_RWP			(1UL << 3)

#घोषणा GICR_TYPER_CPU_NUMBER(r)	(((r) >> 8) & 0xffff)

#घोषणा EPPI_BASE_INTID			1056

#घोषणा GICR_TYPER_NR_PPIS(r)						\
	(अणु								\
		अचिन्हित पूर्णांक __ppinum = ((r) >> 27) & 0x1f;		\
		अचिन्हित पूर्णांक __nr_ppis = 16;				\
		अगर (__ppinum == 1 || __ppinum == 2)			\
			__nr_ppis +=  __ppinum * 32;			\
									\
		__nr_ppis;						\
	 पूर्ण)

#घोषणा GICR_WAKER_ProcessorSleep	(1U << 1)
#घोषणा GICR_WAKER_ChildrenAsleep	(1U << 2)

#घोषणा GIC_BASER_CACHE_nCnB		0ULL
#घोषणा GIC_BASER_CACHE_SameAsInner	0ULL
#घोषणा GIC_BASER_CACHE_nC		1ULL
#घोषणा GIC_BASER_CACHE_RaWt		2ULL
#घोषणा GIC_BASER_CACHE_RaWb		3ULL
#घोषणा GIC_BASER_CACHE_WaWt		4ULL
#घोषणा GIC_BASER_CACHE_WaWb		5ULL
#घोषणा GIC_BASER_CACHE_RaWaWt		6ULL
#घोषणा GIC_BASER_CACHE_RaWaWb		7ULL
#घोषणा GIC_BASER_CACHE_MASK		7ULL
#घोषणा GIC_BASER_NonShareable		0ULL
#घोषणा GIC_BASER_InnerShareable	1ULL
#घोषणा GIC_BASER_OuterShareable	2ULL
#घोषणा GIC_BASER_SHAREABILITY_MASK	3ULL

#घोषणा GIC_BASER_CACHEABILITY(reg, inner_outer, type)			\
	(GIC_BASER_CACHE_##type << reg##_##inner_outer##_CACHEABILITY_SHIFT)

#घोषणा GIC_BASER_SHAREABILITY(reg, type)				\
	(GIC_BASER_##type << reg##_SHAREABILITY_SHIFT)

/* encode a size field of width @w containing @n - 1 units */
#घोषणा GIC_ENCODE_SZ(n, w) (((अचिन्हित दीर्घ)(n) - 1) & GENMASK_ULL(((w) - 1), 0))

#घोषणा GICR_PROPBASER_SHAREABILITY_SHIFT		(10)
#घोषणा GICR_PROPBASER_INNER_CACHEABILITY_SHIFT		(7)
#घोषणा GICR_PROPBASER_OUTER_CACHEABILITY_SHIFT		(56)
#घोषणा GICR_PROPBASER_SHAREABILITY_MASK				\
	GIC_BASER_SHAREABILITY(GICR_PROPBASER, SHAREABILITY_MASK)
#घोषणा GICR_PROPBASER_INNER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GICR_PROPBASER, INNER, MASK)
#घोषणा GICR_PROPBASER_OUTER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GICR_PROPBASER, OUTER, MASK)
#घोषणा GICR_PROPBASER_CACHEABILITY_MASK GICR_PROPBASER_INNER_CACHEABILITY_MASK

#घोषणा GICR_PROPBASER_InnerShareable					\
	GIC_BASER_SHAREABILITY(GICR_PROPBASER, InnerShareable)

#घोषणा GICR_PROPBASER_nCnB	GIC_BASER_CACHEABILITY(GICR_PROPBASER, INNER, nCnB)
#घोषणा GICR_PROPBASER_nC 	GIC_BASER_CACHEABILITY(GICR_PROPBASER, INNER, nC)
#घोषणा GICR_PROPBASER_RaWt	GIC_BASER_CACHEABILITY(GICR_PROPBASER, INNER, RaWt)
#घोषणा GICR_PROPBASER_RaWb	GIC_BASER_CACHEABILITY(GICR_PROPBASER, INNER, RaWb)
#घोषणा GICR_PROPBASER_WaWt	GIC_BASER_CACHEABILITY(GICR_PROPBASER, INNER, WaWt)
#घोषणा GICR_PROPBASER_WaWb	GIC_BASER_CACHEABILITY(GICR_PROPBASER, INNER, WaWb)
#घोषणा GICR_PROPBASER_RaWaWt	GIC_BASER_CACHEABILITY(GICR_PROPBASER, INNER, RaWaWt)
#घोषणा GICR_PROPBASER_RaWaWb	GIC_BASER_CACHEABILITY(GICR_PROPBASER, INNER, RaWaWb)

#घोषणा GICR_PROPBASER_IDBITS_MASK			(0x1f)
#घोषणा GICR_PROPBASER_ADDRESS(x)	((x) & GENMASK_ULL(51, 12))
#घोषणा GICR_PENDBASER_ADDRESS(x)	((x) & GENMASK_ULL(51, 16))

#घोषणा GICR_PENDBASER_SHAREABILITY_SHIFT		(10)
#घोषणा GICR_PENDBASER_INNER_CACHEABILITY_SHIFT		(7)
#घोषणा GICR_PENDBASER_OUTER_CACHEABILITY_SHIFT		(56)
#घोषणा GICR_PENDBASER_SHAREABILITY_MASK				\
	GIC_BASER_SHAREABILITY(GICR_PENDBASER, SHAREABILITY_MASK)
#घोषणा GICR_PENDBASER_INNER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GICR_PENDBASER, INNER, MASK)
#घोषणा GICR_PENDBASER_OUTER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GICR_PENDBASER, OUTER, MASK)
#घोषणा GICR_PENDBASER_CACHEABILITY_MASK GICR_PENDBASER_INNER_CACHEABILITY_MASK

#घोषणा GICR_PENDBASER_InnerShareable					\
	GIC_BASER_SHAREABILITY(GICR_PENDBASER, InnerShareable)

#घोषणा GICR_PENDBASER_nCnB	GIC_BASER_CACHEABILITY(GICR_PENDBASER, INNER, nCnB)
#घोषणा GICR_PENDBASER_nC 	GIC_BASER_CACHEABILITY(GICR_PENDBASER, INNER, nC)
#घोषणा GICR_PENDBASER_RaWt	GIC_BASER_CACHEABILITY(GICR_PENDBASER, INNER, RaWt)
#घोषणा GICR_PENDBASER_RaWb	GIC_BASER_CACHEABILITY(GICR_PENDBASER, INNER, RaWb)
#घोषणा GICR_PENDBASER_WaWt	GIC_BASER_CACHEABILITY(GICR_PENDBASER, INNER, WaWt)
#घोषणा GICR_PENDBASER_WaWb	GIC_BASER_CACHEABILITY(GICR_PENDBASER, INNER, WaWb)
#घोषणा GICR_PENDBASER_RaWaWt	GIC_BASER_CACHEABILITY(GICR_PENDBASER, INNER, RaWaWt)
#घोषणा GICR_PENDBASER_RaWaWb	GIC_BASER_CACHEABILITY(GICR_PENDBASER, INNER, RaWaWb)

#घोषणा GICR_PENDBASER_PTZ				BIT_ULL(62)

/*
 * Re-Distributor रेजिस्टरs, offsets from SGI_base
 */
#घोषणा GICR_IGROUPR0			GICD_IGROUPR
#घोषणा GICR_ISENABLER0			GICD_ISENABLER
#घोषणा GICR_ICENABLER0			GICD_ICENABLER
#घोषणा GICR_ISPENDR0			GICD_ISPENDR
#घोषणा GICR_ICPENDR0			GICD_ICPENDR
#घोषणा GICR_ISACTIVER0			GICD_ISACTIVER
#घोषणा GICR_ICACTIVER0			GICD_ICACTIVER
#घोषणा GICR_IPRIORITYR0		GICD_IPRIORITYR
#घोषणा GICR_ICFGR0			GICD_ICFGR
#घोषणा GICR_IGRPMODR0			GICD_IGRPMODR
#घोषणा GICR_NSACR			GICD_NSACR

#घोषणा GICR_TYPER_PLPIS		(1U << 0)
#घोषणा GICR_TYPER_VLPIS		(1U << 1)
#घोषणा GICR_TYPER_सूचीTY		(1U << 2)
#घोषणा GICR_TYPER_DirectLPIS		(1U << 3)
#घोषणा GICR_TYPER_LAST			(1U << 4)
#घोषणा GICR_TYPER_RVPEID		(1U << 7)
#घोषणा GICR_TYPER_COMMON_LPI_AFF	GENMASK_ULL(25, 24)
#घोषणा GICR_TYPER_AFFINITY		GENMASK_ULL(63, 32)

#घोषणा GICR_INVLPIR_INTID		GENMASK_ULL(31, 0)
#घोषणा GICR_INVLPIR_VPEID		GENMASK_ULL(47, 32)
#घोषणा GICR_INVLPIR_V			GENMASK_ULL(63, 63)

#घोषणा GICR_INVALLR_VPEID		GICR_INVLPIR_VPEID
#घोषणा GICR_INVALLR_V			GICR_INVLPIR_V

#घोषणा GIC_V3_REDIST_SIZE		0x20000

#घोषणा LPI_PROP_GROUP1			(1 << 1)
#घोषणा LPI_PROP_ENABLED		(1 << 0)

/*
 * Re-Distributor रेजिस्टरs, offsets from VLPI_base
 */
#घोषणा GICR_VPROPBASER			0x0070

#घोषणा GICR_VPROPBASER_IDBITS_MASK	0x1f

#घोषणा GICR_VPROPBASER_SHAREABILITY_SHIFT		(10)
#घोषणा GICR_VPROPBASER_INNER_CACHEABILITY_SHIFT	(7)
#घोषणा GICR_VPROPBASER_OUTER_CACHEABILITY_SHIFT	(56)

#घोषणा GICR_VPROPBASER_SHAREABILITY_MASK				\
	GIC_BASER_SHAREABILITY(GICR_VPROPBASER, SHAREABILITY_MASK)
#घोषणा GICR_VPROPBASER_INNER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GICR_VPROPBASER, INNER, MASK)
#घोषणा GICR_VPROPBASER_OUTER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GICR_VPROPBASER, OUTER, MASK)
#घोषणा GICR_VPROPBASER_CACHEABILITY_MASK				\
	GICR_VPROPBASER_INNER_CACHEABILITY_MASK

#घोषणा GICR_VPROPBASER_InnerShareable					\
	GIC_BASER_SHAREABILITY(GICR_VPROPBASER, InnerShareable)

#घोषणा GICR_VPROPBASER_nCnB	GIC_BASER_CACHEABILITY(GICR_VPROPBASER, INNER, nCnB)
#घोषणा GICR_VPROPBASER_nC 	GIC_BASER_CACHEABILITY(GICR_VPROPBASER, INNER, nC)
#घोषणा GICR_VPROPBASER_RaWt	GIC_BASER_CACHEABILITY(GICR_VPROPBASER, INNER, RaWt)
#घोषणा GICR_VPROPBASER_RaWb	GIC_BASER_CACHEABILITY(GICR_VPROPBASER, INNER, RaWb)
#घोषणा GICR_VPROPBASER_WaWt	GIC_BASER_CACHEABILITY(GICR_VPROPBASER, INNER, WaWt)
#घोषणा GICR_VPROPBASER_WaWb	GIC_BASER_CACHEABILITY(GICR_VPROPBASER, INNER, WaWb)
#घोषणा GICR_VPROPBASER_RaWaWt	GIC_BASER_CACHEABILITY(GICR_VPROPBASER, INNER, RaWaWt)
#घोषणा GICR_VPROPBASER_RaWaWb	GIC_BASER_CACHEABILITY(GICR_VPROPBASER, INNER, RaWaWb)

/*
 * GICv4.1 VPROPBASER reinvention. A subtle mix between the old
 * VPROPBASER and ITS_BASER. Just not quite any of the two.
 */
#घोषणा GICR_VPROPBASER_4_1_VALID	(1ULL << 63)
#घोषणा GICR_VPROPBASER_4_1_ENTRY_SIZE	GENMASK_ULL(61, 59)
#घोषणा GICR_VPROPBASER_4_1_INसूचीECT	(1ULL << 55)
#घोषणा GICR_VPROPBASER_4_1_PAGE_SIZE	GENMASK_ULL(54, 53)
#घोषणा GICR_VPROPBASER_4_1_Z		(1ULL << 52)
#घोषणा GICR_VPROPBASER_4_1_ADDR	GENMASK_ULL(51, 12)
#घोषणा GICR_VPROPBASER_4_1_SIZE	GENMASK_ULL(6, 0)

#घोषणा GICR_VPENDBASER			0x0078

#घोषणा GICR_VPENDBASER_SHAREABILITY_SHIFT		(10)
#घोषणा GICR_VPENDBASER_INNER_CACHEABILITY_SHIFT	(7)
#घोषणा GICR_VPENDBASER_OUTER_CACHEABILITY_SHIFT	(56)
#घोषणा GICR_VPENDBASER_SHAREABILITY_MASK				\
	GIC_BASER_SHAREABILITY(GICR_VPENDBASER, SHAREABILITY_MASK)
#घोषणा GICR_VPENDBASER_INNER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GICR_VPENDBASER, INNER, MASK)
#घोषणा GICR_VPENDBASER_OUTER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GICR_VPENDBASER, OUTER, MASK)
#घोषणा GICR_VPENDBASER_CACHEABILITY_MASK				\
	GICR_VPENDBASER_INNER_CACHEABILITY_MASK

#घोषणा GICR_VPENDBASER_NonShareable					\
	GIC_BASER_SHAREABILITY(GICR_VPENDBASER, NonShareable)

#घोषणा GICR_VPENDBASER_InnerShareable					\
	GIC_BASER_SHAREABILITY(GICR_VPENDBASER, InnerShareable)

#घोषणा GICR_VPENDBASER_nCnB	GIC_BASER_CACHEABILITY(GICR_VPENDBASER, INNER, nCnB)
#घोषणा GICR_VPENDBASER_nC 	GIC_BASER_CACHEABILITY(GICR_VPENDBASER, INNER, nC)
#घोषणा GICR_VPENDBASER_RaWt	GIC_BASER_CACHEABILITY(GICR_VPENDBASER, INNER, RaWt)
#घोषणा GICR_VPENDBASER_RaWb	GIC_BASER_CACHEABILITY(GICR_VPENDBASER, INNER, RaWb)
#घोषणा GICR_VPENDBASER_WaWt	GIC_BASER_CACHEABILITY(GICR_VPENDBASER, INNER, WaWt)
#घोषणा GICR_VPENDBASER_WaWb	GIC_BASER_CACHEABILITY(GICR_VPENDBASER, INNER, WaWb)
#घोषणा GICR_VPENDBASER_RaWaWt	GIC_BASER_CACHEABILITY(GICR_VPENDBASER, INNER, RaWaWt)
#घोषणा GICR_VPENDBASER_RaWaWb	GIC_BASER_CACHEABILITY(GICR_VPENDBASER, INNER, RaWaWb)

#घोषणा GICR_VPENDBASER_Dirty		(1ULL << 60)
#घोषणा GICR_VPENDBASER_PendingLast	(1ULL << 61)
#घोषणा GICR_VPENDBASER_IDAI		(1ULL << 62)
#घोषणा GICR_VPENDBASER_Valid		(1ULL << 63)

/*
 * GICv4.1 VPENDBASER, used क्रम VPE residency. On top of these fields,
 * also use the above Valid, PendingLast and Dirty.
 */
#घोषणा GICR_VPENDBASER_4_1_DB		(1ULL << 62)
#घोषणा GICR_VPENDBASER_4_1_VGRP0EN	(1ULL << 59)
#घोषणा GICR_VPENDBASER_4_1_VGRP1EN	(1ULL << 58)
#घोषणा GICR_VPENDBASER_4_1_VPEID	GENMASK_ULL(15, 0)

#घोषणा GICR_VSGIR			0x0080

#घोषणा GICR_VSGIR_VPEID		GENMASK(15, 0)

#घोषणा GICR_VSGIPENDR			0x0088

#घोषणा GICR_VSGIPENDR_BUSY		(1U << 31)
#घोषणा GICR_VSGIPENDR_PENDING		GENMASK(15, 0)

/*
 * ITS रेजिस्टरs, offsets from ITS_base
 */
#घोषणा GITS_CTLR			0x0000
#घोषणा GITS_IIDR			0x0004
#घोषणा GITS_TYPER			0x0008
#घोषणा GITS_MPIDR			0x0018
#घोषणा GITS_CBASER			0x0080
#घोषणा GITS_CWRITER			0x0088
#घोषणा GITS_CREADR			0x0090
#घोषणा GITS_BASER			0x0100
#घोषणा GITS_IDREGS_BASE		0xffd0
#घोषणा GITS_PIDR0			0xffe0
#घोषणा GITS_PIDR1			0xffe4
#घोषणा GITS_PIDR2			GICR_PIDR2
#घोषणा GITS_PIDR4			0xffd0
#घोषणा GITS_CIDR0			0xfff0
#घोषणा GITS_CIDR1			0xfff4
#घोषणा GITS_CIDR2			0xfff8
#घोषणा GITS_CIDR3			0xfffc

#घोषणा GITS_TRANSLATER			0x10040

#घोषणा GITS_SGIR			0x20020

#घोषणा GITS_SGIR_VPEID			GENMASK_ULL(47, 32)
#घोषणा GITS_SGIR_VINTID		GENMASK_ULL(3, 0)

#घोषणा GITS_CTLR_ENABLE		(1U << 0)
#घोषणा GITS_CTLR_ImDe			(1U << 1)
#घोषणा	GITS_CTLR_ITS_NUMBER_SHIFT	4
#घोषणा	GITS_CTLR_ITS_NUMBER		(0xFU << GITS_CTLR_ITS_NUMBER_SHIFT)
#घोषणा GITS_CTLR_QUIESCENT		(1U << 31)

#घोषणा GITS_TYPER_PLPIS		(1UL << 0)
#घोषणा GITS_TYPER_VLPIS		(1UL << 1)
#घोषणा GITS_TYPER_ITT_ENTRY_SIZE_SHIFT	4
#घोषणा GITS_TYPER_ITT_ENTRY_SIZE	GENMASK_ULL(7, 4)
#घोषणा GITS_TYPER_IDBITS_SHIFT		8
#घोषणा GITS_TYPER_DEVBITS_SHIFT	13
#घोषणा GITS_TYPER_DEVBITS		GENMASK_ULL(17, 13)
#घोषणा GITS_TYPER_PTA			(1UL << 19)
#घोषणा GITS_TYPER_HCC_SHIFT		24
#घोषणा GITS_TYPER_HCC(r)		(((r) >> GITS_TYPER_HCC_SHIFT) & 0xff)
#घोषणा GITS_TYPER_VMOVP		(1ULL << 37)
#घोषणा GITS_TYPER_VMAPP		(1ULL << 40)
#घोषणा GITS_TYPER_SVPET		GENMASK_ULL(42, 41)

#घोषणा GITS_IIDR_REV_SHIFT		12
#घोषणा GITS_IIDR_REV_MASK		(0xf << GITS_IIDR_REV_SHIFT)
#घोषणा GITS_IIDR_REV(r)		(((r) >> GITS_IIDR_REV_SHIFT) & 0xf)
#घोषणा GITS_IIDR_PRODUCTID_SHIFT	24

#घोषणा GITS_CBASER_VALID			(1ULL << 63)
#घोषणा GITS_CBASER_SHAREABILITY_SHIFT		(10)
#घोषणा GITS_CBASER_INNER_CACHEABILITY_SHIFT	(59)
#घोषणा GITS_CBASER_OUTER_CACHEABILITY_SHIFT	(53)
#घोषणा GITS_CBASER_SHAREABILITY_MASK					\
	GIC_BASER_SHAREABILITY(GITS_CBASER, SHAREABILITY_MASK)
#घोषणा GITS_CBASER_INNER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GITS_CBASER, INNER, MASK)
#घोषणा GITS_CBASER_OUTER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GITS_CBASER, OUTER, MASK)
#घोषणा GITS_CBASER_CACHEABILITY_MASK GITS_CBASER_INNER_CACHEABILITY_MASK

#घोषणा GITS_CBASER_InnerShareable					\
	GIC_BASER_SHAREABILITY(GITS_CBASER, InnerShareable)

#घोषणा GITS_CBASER_nCnB	GIC_BASER_CACHEABILITY(GITS_CBASER, INNER, nCnB)
#घोषणा GITS_CBASER_nC		GIC_BASER_CACHEABILITY(GITS_CBASER, INNER, nC)
#घोषणा GITS_CBASER_RaWt	GIC_BASER_CACHEABILITY(GITS_CBASER, INNER, RaWt)
#घोषणा GITS_CBASER_RaWb	GIC_BASER_CACHEABILITY(GITS_CBASER, INNER, RaWb)
#घोषणा GITS_CBASER_WaWt	GIC_BASER_CACHEABILITY(GITS_CBASER, INNER, WaWt)
#घोषणा GITS_CBASER_WaWb	GIC_BASER_CACHEABILITY(GITS_CBASER, INNER, WaWb)
#घोषणा GITS_CBASER_RaWaWt	GIC_BASER_CACHEABILITY(GITS_CBASER, INNER, RaWaWt)
#घोषणा GITS_CBASER_RaWaWb	GIC_BASER_CACHEABILITY(GITS_CBASER, INNER, RaWaWb)

#घोषणा GITS_CBASER_ADDRESS(cbaser)	((cbaser) & GENMASK_ULL(51, 12))

#घोषणा GITS_BASER_NR_REGS		8

#घोषणा GITS_BASER_VALID			(1ULL << 63)
#घोषणा GITS_BASER_INसूचीECT			(1ULL << 62)

#घोषणा GITS_BASER_INNER_CACHEABILITY_SHIFT	(59)
#घोषणा GITS_BASER_OUTER_CACHEABILITY_SHIFT	(53)
#घोषणा GITS_BASER_INNER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GITS_BASER, INNER, MASK)
#घोषणा GITS_BASER_CACHEABILITY_MASK		GITS_BASER_INNER_CACHEABILITY_MASK
#घोषणा GITS_BASER_OUTER_CACHEABILITY_MASK				\
	GIC_BASER_CACHEABILITY(GITS_BASER, OUTER, MASK)
#घोषणा GITS_BASER_SHAREABILITY_MASK					\
	GIC_BASER_SHAREABILITY(GITS_BASER, SHAREABILITY_MASK)

#घोषणा GITS_BASER_nCnB		GIC_BASER_CACHEABILITY(GITS_BASER, INNER, nCnB)
#घोषणा GITS_BASER_nC		GIC_BASER_CACHEABILITY(GITS_BASER, INNER, nC)
#घोषणा GITS_BASER_RaWt		GIC_BASER_CACHEABILITY(GITS_BASER, INNER, RaWt)
#घोषणा GITS_BASER_RaWb		GIC_BASER_CACHEABILITY(GITS_BASER, INNER, RaWb)
#घोषणा GITS_BASER_WaWt		GIC_BASER_CACHEABILITY(GITS_BASER, INNER, WaWt)
#घोषणा GITS_BASER_WaWb		GIC_BASER_CACHEABILITY(GITS_BASER, INNER, WaWb)
#घोषणा GITS_BASER_RaWaWt	GIC_BASER_CACHEABILITY(GITS_BASER, INNER, RaWaWt)
#घोषणा GITS_BASER_RaWaWb	GIC_BASER_CACHEABILITY(GITS_BASER, INNER, RaWaWb)

#घोषणा GITS_BASER_TYPE_SHIFT			(56)
#घोषणा GITS_BASER_TYPE(r)		(((r) >> GITS_BASER_TYPE_SHIFT) & 7)
#घोषणा GITS_BASER_ENTRY_SIZE_SHIFT		(48)
#घोषणा GITS_BASER_ENTRY_SIZE(r)	((((r) >> GITS_BASER_ENTRY_SIZE_SHIFT) & 0x1f) + 1)
#घोषणा GITS_BASER_ENTRY_SIZE_MASK	GENMASK_ULL(52, 48)
#घोषणा GITS_BASER_PHYS_52_to_48(phys)					\
	(((phys) & GENMASK_ULL(47, 16)) | (((phys) >> 48) & 0xf) << 12)
#घोषणा GITS_BASER_ADDR_48_to_52(baser)					\
	(((baser) & GENMASK_ULL(47, 16)) | (((baser) >> 12) & 0xf) << 48)

#घोषणा GITS_BASER_SHAREABILITY_SHIFT	(10)
#घोषणा GITS_BASER_InnerShareable					\
	GIC_BASER_SHAREABILITY(GITS_BASER, InnerShareable)
#घोषणा GITS_BASER_PAGE_SIZE_SHIFT	(8)
#घोषणा __GITS_BASER_PSZ(sz)		(GIC_PAGE_SIZE_ ## sz << GITS_BASER_PAGE_SIZE_SHIFT)
#घोषणा GITS_BASER_PAGE_SIZE_4K		__GITS_BASER_PSZ(4K)
#घोषणा GITS_BASER_PAGE_SIZE_16K	__GITS_BASER_PSZ(16K)
#घोषणा GITS_BASER_PAGE_SIZE_64K	__GITS_BASER_PSZ(64K)
#घोषणा GITS_BASER_PAGE_SIZE_MASK	__GITS_BASER_PSZ(MASK)
#घोषणा GITS_BASER_PAGES_MAX		256
#घोषणा GITS_BASER_PAGES_SHIFT		(0)
#घोषणा GITS_BASER_NR_PAGES(r)		(((r) & 0xff) + 1)

#घोषणा GITS_BASER_TYPE_NONE		0
#घोषणा GITS_BASER_TYPE_DEVICE		1
#घोषणा GITS_BASER_TYPE_VCPU		2
#घोषणा GITS_BASER_TYPE_RESERVED3	3
#घोषणा GITS_BASER_TYPE_COLLECTION	4
#घोषणा GITS_BASER_TYPE_RESERVED5	5
#घोषणा GITS_BASER_TYPE_RESERVED6	6
#घोषणा GITS_BASER_TYPE_RESERVED7	7

#घोषणा GITS_LVL1_ENTRY_SIZE           (8UL)

/*
 * ITS commands
 */
#घोषणा GITS_CMD_MAPD			0x08
#घोषणा GITS_CMD_MAPC			0x09
#घोषणा GITS_CMD_MAPTI			0x0a
#घोषणा GITS_CMD_MAPI			0x0b
#घोषणा GITS_CMD_MOVI			0x01
#घोषणा GITS_CMD_DISCARD		0x0f
#घोषणा GITS_CMD_INV			0x0c
#घोषणा GITS_CMD_MOVALL			0x0e
#घोषणा GITS_CMD_INVALL			0x0d
#घोषणा GITS_CMD_INT			0x03
#घोषणा GITS_CMD_CLEAR			0x04
#घोषणा GITS_CMD_SYNC			0x05

/*
 * GICv4 ITS specअगरic commands
 */
#घोषणा GITS_CMD_GICv4(x)		((x) | 0x20)
#घोषणा GITS_CMD_VINVALL		GITS_CMD_GICv4(GITS_CMD_INVALL)
#घोषणा GITS_CMD_VMAPP			GITS_CMD_GICv4(GITS_CMD_MAPC)
#घोषणा GITS_CMD_VMAPTI			GITS_CMD_GICv4(GITS_CMD_MAPTI)
#घोषणा GITS_CMD_VMOVI			GITS_CMD_GICv4(GITS_CMD_MOVI)
#घोषणा GITS_CMD_VSYNC			GITS_CMD_GICv4(GITS_CMD_SYNC)
/* VMOVP, VSGI and INVDB are the odd ones, as they करोnt have a physical counterpart */
#घोषणा GITS_CMD_VMOVP			GITS_CMD_GICv4(2)
#घोषणा GITS_CMD_VSGI			GITS_CMD_GICv4(3)
#घोषणा GITS_CMD_INVDB			GITS_CMD_GICv4(0xe)

/*
 * ITS error numbers
 */
#घोषणा E_ITS_MOVI_UNMAPPED_INTERRUPT		0x010107
#घोषणा E_ITS_MOVI_UNMAPPED_COLLECTION		0x010109
#घोषणा E_ITS_INT_UNMAPPED_INTERRUPT		0x010307
#घोषणा E_ITS_CLEAR_UNMAPPED_INTERRUPT		0x010507
#घोषणा E_ITS_MAPD_DEVICE_OOR			0x010801
#घोषणा E_ITS_MAPD_ITTSIZE_OOR			0x010802
#घोषणा E_ITS_MAPC_PROCNUM_OOR			0x010902
#घोषणा E_ITS_MAPC_COLLECTION_OOR		0x010903
#घोषणा E_ITS_MAPTI_UNMAPPED_DEVICE		0x010a04
#घोषणा E_ITS_MAPTI_ID_OOR			0x010a05
#घोषणा E_ITS_MAPTI_PHYSICALID_OOR		0x010a06
#घोषणा E_ITS_INV_UNMAPPED_INTERRUPT		0x010c07
#घोषणा E_ITS_INVALL_UNMAPPED_COLLECTION	0x010d09
#घोषणा E_ITS_MOVALL_PROCNUM_OOR		0x010e01
#घोषणा E_ITS_DISCARD_UNMAPPED_INTERRUPT	0x010f07

/*
 * CPU पूर्णांकerface रेजिस्टरs
 */
#घोषणा ICC_CTLR_EL1_EOImode_SHIFT	(1)
#घोषणा ICC_CTLR_EL1_EOImode_drop_dir	(0U << ICC_CTLR_EL1_EOImode_SHIFT)
#घोषणा ICC_CTLR_EL1_EOImode_drop	(1U << ICC_CTLR_EL1_EOImode_SHIFT)
#घोषणा ICC_CTLR_EL1_EOImode_MASK	(1 << ICC_CTLR_EL1_EOImode_SHIFT)
#घोषणा ICC_CTLR_EL1_CBPR_SHIFT		0
#घोषणा ICC_CTLR_EL1_CBPR_MASK		(1 << ICC_CTLR_EL1_CBPR_SHIFT)
#घोषणा ICC_CTLR_EL1_PMHE_SHIFT		6
#घोषणा ICC_CTLR_EL1_PMHE_MASK		(1 << ICC_CTLR_EL1_PMHE_SHIFT)
#घोषणा ICC_CTLR_EL1_PRI_BITS_SHIFT	8
#घोषणा ICC_CTLR_EL1_PRI_BITS_MASK	(0x7 << ICC_CTLR_EL1_PRI_BITS_SHIFT)
#घोषणा ICC_CTLR_EL1_ID_BITS_SHIFT	11
#घोषणा ICC_CTLR_EL1_ID_BITS_MASK	(0x7 << ICC_CTLR_EL1_ID_BITS_SHIFT)
#घोषणा ICC_CTLR_EL1_SEIS_SHIFT		14
#घोषणा ICC_CTLR_EL1_SEIS_MASK		(0x1 << ICC_CTLR_EL1_SEIS_SHIFT)
#घोषणा ICC_CTLR_EL1_A3V_SHIFT		15
#घोषणा ICC_CTLR_EL1_A3V_MASK		(0x1 << ICC_CTLR_EL1_A3V_SHIFT)
#घोषणा ICC_CTLR_EL1_RSS		(0x1 << 18)
#घोषणा ICC_CTLR_EL1_ExtRange		(0x1 << 19)
#घोषणा ICC_PMR_EL1_SHIFT		0
#घोषणा ICC_PMR_EL1_MASK		(0xff << ICC_PMR_EL1_SHIFT)
#घोषणा ICC_BPR0_EL1_SHIFT		0
#घोषणा ICC_BPR0_EL1_MASK		(0x7 << ICC_BPR0_EL1_SHIFT)
#घोषणा ICC_BPR1_EL1_SHIFT		0
#घोषणा ICC_BPR1_EL1_MASK		(0x7 << ICC_BPR1_EL1_SHIFT)
#घोषणा ICC_IGRPEN0_EL1_SHIFT		0
#घोषणा ICC_IGRPEN0_EL1_MASK		(1 << ICC_IGRPEN0_EL1_SHIFT)
#घोषणा ICC_IGRPEN1_EL1_SHIFT		0
#घोषणा ICC_IGRPEN1_EL1_MASK		(1 << ICC_IGRPEN1_EL1_SHIFT)
#घोषणा ICC_SRE_EL1_DIB			(1U << 2)
#घोषणा ICC_SRE_EL1_DFB			(1U << 1)
#घोषणा ICC_SRE_EL1_SRE			(1U << 0)

/* These are क्रम GICv2 emulation only */
#घोषणा GICH_LR_VIRTUALID		(0x3ffUL << 0)
#घोषणा GICH_LR_PHYSID_CPUID_SHIFT	(10)
#घोषणा GICH_LR_PHYSID_CPUID		(7UL << GICH_LR_PHYSID_CPUID_SHIFT)

#घोषणा ICC_IAR1_EL1_SPURIOUS		0x3ff

#घोषणा ICC_SRE_EL2_SRE			(1 << 0)
#घोषणा ICC_SRE_EL2_ENABLE		(1 << 3)

#घोषणा ICC_SGI1R_TARGET_LIST_SHIFT	0
#घोषणा ICC_SGI1R_TARGET_LIST_MASK	(0xffff << ICC_SGI1R_TARGET_LIST_SHIFT)
#घोषणा ICC_SGI1R_AFFINITY_1_SHIFT	16
#घोषणा ICC_SGI1R_AFFINITY_1_MASK	(0xff << ICC_SGI1R_AFFINITY_1_SHIFT)
#घोषणा ICC_SGI1R_SGI_ID_SHIFT		24
#घोषणा ICC_SGI1R_SGI_ID_MASK		(0xfULL << ICC_SGI1R_SGI_ID_SHIFT)
#घोषणा ICC_SGI1R_AFFINITY_2_SHIFT	32
#घोषणा ICC_SGI1R_AFFINITY_2_MASK	(0xffULL << ICC_SGI1R_AFFINITY_2_SHIFT)
#घोषणा ICC_SGI1R_IRQ_ROUTING_MODE_BIT	40
#घोषणा ICC_SGI1R_RS_SHIFT		44
#घोषणा ICC_SGI1R_RS_MASK		(0xfULL << ICC_SGI1R_RS_SHIFT)
#घोषणा ICC_SGI1R_AFFINITY_3_SHIFT	48
#घोषणा ICC_SGI1R_AFFINITY_3_MASK	(0xffULL << ICC_SGI1R_AFFINITY_3_SHIFT)

#समावेश <यंत्र/arch_gicv3.h>

#अगर_अघोषित __ASSEMBLY__

/*
 * We need a value to serve as a irq-type क्रम LPIs. Choose one that will
 * hopefully pique the पूर्णांकerest of the reviewer.
 */
#घोषणा GIC_IRQ_TYPE_LPI		0xa110c8ed

काष्ठा rdists अणु
	काष्ठा अणु
		raw_spinlock_t	rd_lock;
		व्योम __iomem	*rd_base;
		काष्ठा page	*pend_page;
		phys_addr_t	phys_base;
		bool		lpi_enabled;
		cpumask_t	*vpe_table_mask;
		व्योम		*vpe_l1_base;
	पूर्ण __percpu		*rdist;
	phys_addr_t		prop_table_pa;
	व्योम			*prop_table_va;
	u64			flags;
	u32			gicd_typer;
	u32			gicd_typer2;
	bool			has_vlpis;
	bool			has_rvpeid;
	bool			has_direct_lpi;
	bool			has_vpend_valid_dirty;
पूर्ण;

काष्ठा irq_करोमुख्य;
काष्ठा fwnode_handle;
पूर्णांक its_cpu_init(व्योम);
पूर्णांक its_init(काष्ठा fwnode_handle *handle, काष्ठा rdists *rdists,
	     काष्ठा irq_करोमुख्य *करोमुख्य);
पूर्णांक mbi_init(काष्ठा fwnode_handle *fwnode, काष्ठा irq_करोमुख्य *parent);

अटल अंतरभूत bool gic_enable_sre(व्योम)
अणु
	u32 val;

	val = gic_पढ़ो_sre();
	अगर (val & ICC_SRE_EL1_SRE)
		वापस true;

	val |= ICC_SRE_EL1_SRE;
	gic_ग_लिखो_sre(val);
	val = gic_पढ़ो_sre();

	वापस !!(val & ICC_SRE_EL1_SRE);
पूर्ण

#पूर्ण_अगर

#पूर्ण_अगर
