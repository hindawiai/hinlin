<शैली गुरु>
/* SPDX-License-Identअगरier: GPL-2.0 */
#अगर_अघोषित __ALPHA_PAL_H
#घोषणा __ALPHA_PAL_H

#समावेश <uapi/यंत्र/pal.h>

#अगर_अघोषित __ASSEMBLY__

बाह्य व्योम halt(व्योम) __attribute__((noवापस));
#घोषणा __halt() __यंत्र__ __अस्थिर__ ("call_pal %0 #halt" : : "i" (PAL_halt))

#घोषणा imb() \
__यंत्र__ __अस्थिर__ ("call_pal %0 #imb" : : "i" (PAL_imb) : "memory")

#घोषणा draina() \
__यंत्र__ __अस्थिर__ ("call_pal %0 #draina" : : "i" (PAL_draina) : "memory")

#घोषणा __CALL_PAL_R0(NAME, TYPE)				\
बाह्य अंतरभूत TYPE NAME(व्योम)					\
अणु								\
	रेजिस्टर TYPE __r0 __यंत्र__("$0");			\
	__यंत्र__ __अस्थिर__(					\
		"call_pal %1 # " #NAME				\
		:"=r" (__r0)					\
		:"i" (PAL_ ## NAME)				\
		:"$1", "$16", "$22", "$23", "$24", "$25");	\
	वापस __r0;						\
पूर्ण

#घोषणा __CALL_PAL_W1(NAME, TYPE0)				\
बाह्य अंतरभूत व्योम NAME(TYPE0 arg0)				\
अणु								\
	रेजिस्टर TYPE0 __r16 __यंत्र__("$16") = arg0;		\
	__यंत्र__ __अस्थिर__(					\
		"call_pal %1 # "#NAME				\
		: "=r"(__r16)					\
		: "i"(PAL_ ## NAME), "0"(__r16)			\
		: "$1", "$22", "$23", "$24", "$25");		\
पूर्ण

#घोषणा __CALL_PAL_W2(NAME, TYPE0, TYPE1)			\
बाह्य अंतरभूत व्योम NAME(TYPE0 arg0, TYPE1 arg1)			\
अणु								\
	रेजिस्टर TYPE0 __r16 __यंत्र__("$16") = arg0;		\
	रेजिस्टर TYPE1 __r17 __यंत्र__("$17") = arg1;		\
	__यंत्र__ __अस्थिर__(					\
		"call_pal %2 # "#NAME				\
		: "=r"(__r16), "=r"(__r17)			\
		: "i"(PAL_ ## NAME), "0"(__r16), "1"(__r17)	\
		: "$1", "$22", "$23", "$24", "$25");		\
पूर्ण

#घोषणा __CALL_PAL_RW1(NAME, RTYPE, TYPE0)			\
बाह्य अंतरभूत RTYPE NAME(TYPE0 arg0)				\
अणु								\
	रेजिस्टर RTYPE __r0 __यंत्र__("$0");			\
	रेजिस्टर TYPE0 __r16 __यंत्र__("$16") = arg0;		\
	__यंत्र__ __अस्थिर__(					\
		"call_pal %2 # "#NAME				\
		: "=r"(__r16), "=r"(__r0)			\
		: "i"(PAL_ ## NAME), "0"(__r16)			\
		: "$1", "$22", "$23", "$24", "$25");		\
	वापस __r0;						\
पूर्ण

#घोषणा __CALL_PAL_RW2(NAME, RTYPE, TYPE0, TYPE1)		\
बाह्य अंतरभूत RTYPE NAME(TYPE0 arg0, TYPE1 arg1)		\
अणु								\
	रेजिस्टर RTYPE __r0 __यंत्र__("$0");			\
	रेजिस्टर TYPE0 __r16 __यंत्र__("$16") = arg0;		\
	रेजिस्टर TYPE1 __r17 __यंत्र__("$17") = arg1;		\
	__यंत्र__ __अस्थिर__(					\
		"call_pal %3 # "#NAME				\
		: "=r"(__r16), "=r"(__r17), "=r"(__r0)		\
		: "i"(PAL_ ## NAME), "0"(__r16), "1"(__r17)	\
		: "$1", "$22", "$23", "$24", "$25");		\
	वापस __r0;						\
पूर्ण

__CALL_PAL_W1(cflush, अचिन्हित दीर्घ);
__CALL_PAL_R0(rdmces, अचिन्हित दीर्घ);
__CALL_PAL_R0(rdps, अचिन्हित दीर्घ);
__CALL_PAL_R0(rdusp, अचिन्हित दीर्घ);
__CALL_PAL_RW1(swpipl, अचिन्हित दीर्घ, अचिन्हित दीर्घ);
__CALL_PAL_R0(whami, अचिन्हित दीर्घ);
__CALL_PAL_W2(wrent, व्योम*, अचिन्हित दीर्घ);
__CALL_PAL_W1(wripir, अचिन्हित दीर्घ);
__CALL_PAL_W1(wrkgp, अचिन्हित दीर्घ);
__CALL_PAL_W1(wrmces, अचिन्हित दीर्घ);
__CALL_PAL_RW2(wrperfmon, अचिन्हित दीर्घ, अचिन्हित दीर्घ, अचिन्हित दीर्घ);
__CALL_PAL_W1(wrusp, अचिन्हित दीर्घ);
__CALL_PAL_W1(wrvptptr, अचिन्हित दीर्घ);
__CALL_PAL_RW1(wtपूर्णांक, अचिन्हित दीर्घ, अचिन्हित दीर्घ);

/*
 * TB routines..
 */
#घोषणा __tbi(nr,arg,arg1...)					\
(अणु								\
	रेजिस्टर अचिन्हित दीर्घ __r16 __यंत्र__("$16") = (nr);	\
	रेजिस्टर अचिन्हित दीर्घ __r17 __यंत्र__("$17"); arg;	\
	__यंत्र__ __अस्थिर__(					\
		"call_pal %3 #__tbi"				\
		:"=r" (__r16),"=r" (__r17)			\
		:"0" (__r16),"i" (PAL_tbi) ,##arg1		\
		:"$0", "$1", "$22", "$23", "$24", "$25");	\
पूर्ण)

#घोषणा tbi(x,y)	__tbi(x,__r17=(y),"1" (__r17))
#घोषणा tbisi(x)	__tbi(1,__r17=(x),"1" (__r17))
#घोषणा tbisd(x)	__tbi(2,__r17=(x),"1" (__r17))
#घोषणा tbis(x)		__tbi(3,__r17=(x),"1" (__r17))
#घोषणा tbiap()		__tbi(-1, /* no second argument */)
#घोषणा tbia()		__tbi(-2, /* no second argument */)

/*
 * QEMU Cserv routines..
 */

अटल अंतरभूत अचिन्हित दीर्घ
qemu_get_wallसमय(व्योम)
अणु
	रेजिस्टर अचिन्हित दीर्घ v0 __यंत्र__("$0");
	रेजिस्टर अचिन्हित दीर्घ a0 __यंत्र__("$16") = 3;

	यंत्र("call_pal %2 # cserve get_time"
	    : "=r"(v0), "+r"(a0)
	    : "i"(PAL_cserve)
	    : "$17", "$18", "$19", "$20", "$21");

	वापस v0;
पूर्ण

अटल अंतरभूत अचिन्हित दीर्घ
qemu_get_alarm(व्योम)
अणु
	रेजिस्टर अचिन्हित दीर्घ v0 __यंत्र__("$0");
	रेजिस्टर अचिन्हित दीर्घ a0 __यंत्र__("$16") = 4;

	यंत्र("call_pal %2 # cserve get_alarm"
	    : "=r"(v0), "+r"(a0)
	    : "i"(PAL_cserve)
	    : "$17", "$18", "$19", "$20", "$21");

	वापस v0;
पूर्ण

अटल अंतरभूत व्योम
qemu_set_alarm_rel(अचिन्हित दीर्घ expire)
अणु
	रेजिस्टर अचिन्हित दीर्घ a0 __यंत्र__("$16") = 5;
	रेजिस्टर अचिन्हित दीर्घ a1 __यंत्र__("$17") = expire;

	यंत्र अस्थिर("call_pal %2 # cserve set_alarm_rel"
		     : "+r"(a0), "+r"(a1)
		     : "i"(PAL_cserve)
		     : "$0", "$18", "$19", "$20", "$21");
पूर्ण

अटल अंतरभूत व्योम
qemu_set_alarm_असल(अचिन्हित दीर्घ expire)
अणु
	रेजिस्टर अचिन्हित दीर्घ a0 __यंत्र__("$16") = 6;
	रेजिस्टर अचिन्हित दीर्घ a1 __यंत्र__("$17") = expire;

	यंत्र अस्थिर("call_pal %2 # cserve set_alarm_abs"
		     : "+r"(a0), "+r"(a1)
		     : "i"(PAL_cserve)
		     : "$0", "$18", "$19", "$20", "$21");
पूर्ण

अटल अंतरभूत अचिन्हित दीर्घ
qemu_get_vmसमय(व्योम)
अणु
	रेजिस्टर अचिन्हित दीर्घ v0 __यंत्र__("$0");
	रेजिस्टर अचिन्हित दीर्घ a0 __यंत्र__("$16") = 7;

	यंत्र("call_pal %2 # cserve get_time"
	    : "=r"(v0), "+r"(a0)
	    : "i"(PAL_cserve)
	    : "$17", "$18", "$19", "$20", "$21");

	वापस v0;
पूर्ण

#पूर्ण_अगर /* !__ASSEMBLY__ */
#पूर्ण_अगर /* __ALPHA_PAL_H */
