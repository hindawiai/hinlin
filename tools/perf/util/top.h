<рд╢реИрд▓реА рдЧреБрд░реБ>
/* SPDX-License-IdentрдЕрдЧрд░ier: GPL-2.0 */
#рдЕрдЧрд░_рдЕрдШреЛрд╖рд┐рдд __PERF_TOP_H
#рдШреЛрд╖рдгрд╛ __PERF_TOP_H 1

#рд╕рдорд╛рд╡реЗрд╢ "tool.h"
#рд╕рдорд╛рд╡реЗрд╢ "evswitch.h"
#рд╕рдорд╛рд╡реЗрд╢ "annotate.h"
#рд╕рдорд╛рд╡реЗрд╢ "ordered-events.h"
#рд╕рдорд╛рд╡реЗрд╢ "record.h"
#рд╕рдорд╛рд╡реЗрд╢ <linux/types.h>
#рд╕рдорд╛рд╡реЗрд╢ <рдорд╛рдирдХрдШреЛрд╖.рд╕>
#рд╕рдорд╛рд╡реЗрд╢ <stdbool.h>
#рд╕рдорд╛рд╡реЗрд╢ <sys/ioctl.h>

рдХрд╛рд╖реНрдард╛ evlist;
рдХрд╛рд╖реНрдард╛ evsel;
рдХрд╛рд╖реНрдард╛ perf_session;

рдХрд╛рд╖реНрдард╛ perf_top рдЕрдгреБ
	рдХрд╛рд╖реНрдард╛ perf_tool   tool;
	рдХрд╛рд╖реНрдард╛ evlist *evlist, *sb_evlist;
	рдХрд╛рд╖реНрдард╛ record_opts record_opts;
	рдХрд╛рд╖реНрдард╛ annotation_options annotation_opts;
	рдХрд╛рд╖реНрдард╛ evрдЪрдпрди	   evрдЪрдпрди;
	/*
	 * Symbols will be added here in perf_event__process_sample and will
	 * get out after decayed.
	 */
	u64		   samples, lost, lost_total, drop, drop_total;
	u64		   kernel_samples, us_samples;
	u64		   exact_samples;
	u64		   guest_us_samples, guest_kernel_samples;
	рдкреВрд░реНрдгрд╛рдВрдХ		   prрдкреВрд░реНрдгрд╛рдВрдХ_entries, count_filter, delay_secs;
	рдкреВрд░реНрдгрд╛рдВрдХ		   max_stack;
	bool		   hide_kernel_symbols, hide_user_symbols, zero;
	bool		   use_tui, use_stdio;
	bool		   vmlinux_warned;
	bool		   dump_symtab;
	bool		   stitch_lbr;
	рдХрд╛рд╖реНрдард╛ hist_entry  *sym_filter_entry;
	рдХрд╛рд╖реНрдард╛ evsel 	   *sym_evsel;
	рдХрд╛рд╖реНрдард╛ perf_session *session;
	рдХрд╛рд╖реНрдард╛ winsize	   winsize;
	рдкреВрд░реНрдгрд╛рдВрдХ		   realрд╕рдордп_prio;
	рд╕реНрдерд┐рд░ рдЕрдХреНрд╖рд░	   *sym_filter;
	рднрдЧреНрди		   min_percent;
	рдЕрдЪрд┐рдиреНрд╣рд┐рдд рдкреВрд░реНрдгрд╛рдВрдХ	   nr_thрдкрдврд╝реЛs_synthesize;

	рдХрд╛рд╖реНрдард╛ рдЕрдгреБ
		рдХрд╛рд╖реНрдард╛ ordered_events	*in;
		рдХрд╛рд╖реНрдард╛ ordered_events	 data[2];
		bool			 rotate;
		pthрдкрдврд╝реЛ_mutex_t		 mutex;
		pthрдкрдврд╝реЛ_cond_t		 cond;
	рдкреВрд░реНрдг qe;
рдкреВрд░реНрдг;

#рдШреЛрд╖рдгрд╛ CONSOLE_CLEAR "[H[2J"

рдорд╛рдк_рдкреНрд░рдХрд╛рд░ perf_top__header_snрдо_рд▓рд┐рдЦреЛ(рдХрд╛рд╖реНрдард╛ perf_top *top, рдЕрдХреНрд╖рд░ *bf, рдорд╛рдк_рдкреНрд░рдХрд╛рд░ size);
рд╡реНрдпреЛрдо perf_top__reset_sample_counters(рдХрд╛рд╖реНрдард╛ perf_top *top);
#рдкреВрд░реНрдг_рдЕрдЧрд░ /* __PERF_TOP_H */
