<शैली गुरु>
/* SPDX-License-Identअगरier: GPL-2.0-only */
/*
 * Intel Keem Bay OCS HCU Crypto Driver.
 *
 * Copyright (C) 2018-2020 Intel Corporation
 */

#समावेश <linux/dma-mapping.h>

#अगर_अघोषित _CRYPTO_OCS_HCU_H
#घोषणा _CRYPTO_OCS_HCU_H

#घोषणा OCS_HCU_DMA_BIT_MASK		DMA_BIT_MASK(32)

#घोषणा OCS_HCU_HW_KEY_LEN		64

काष्ठा ocs_hcu_dma_list;

क्रमागत ocs_hcu_algo अणु
	OCS_HCU_ALGO_SHA256 = 2,
	OCS_HCU_ALGO_SHA224 = 3,
	OCS_HCU_ALGO_SHA384 = 4,
	OCS_HCU_ALGO_SHA512 = 5,
	OCS_HCU_ALGO_SM3    = 6,
पूर्ण;

/**
 * काष्ठा ocs_hcu_dev - OCS HCU device context.
 * @list:	List of device contexts.
 * @dev:	OCS HCU device.
 * @io_base:	Base address of OCS HCU रेजिस्टरs.
 * @engine:	Crypto engine क्रम the device.
 * @irq:	IRQ number.
 * @irq_करोne:	Completion क्रम IRQ.
 * @irq_err:	Flag indicating an IRQ error has happened.
 */
काष्ठा ocs_hcu_dev अणु
	काष्ठा list_head list;
	काष्ठा device *dev;
	व्योम __iomem *io_base;
	काष्ठा crypto_engine *engine;
	पूर्णांक irq;
	काष्ठा completion irq_करोne;
	bool irq_err;
पूर्ण;

/**
 * काष्ठा ocs_hcu_idata - Intermediate data generated by the HCU.
 * @msg_len_lo: Length of data the HCU has operated on in bits, low 32b.
 * @msg_len_hi: Length of data the HCU has operated on in bits, high 32b.
 * @digest: The digest पढ़ो from the HCU. If the HCU is terminated, it will
 *	    contain the actual hash digest. Otherwise it is the पूर्णांकermediate
 *	    state.
 */
काष्ठा ocs_hcu_idata अणु
	u32 msg_len_lo;
	u32 msg_len_hi;
	u8  digest[SHA512_DIGEST_SIZE];
पूर्ण;

/**
 * काष्ठा ocs_hcu_hash_ctx - Context क्रम OCS HCU hashing operation.
 * @algo:	The hashing algorithm being used.
 * @idata:	The current पूर्णांकermediate data.
 */
काष्ठा ocs_hcu_hash_ctx अणु
	क्रमागत ocs_hcu_algo	algo;
	काष्ठा ocs_hcu_idata	idata;
पूर्ण;

irqवापस_t ocs_hcu_irq_handler(पूर्णांक irq, व्योम *dev_id);

काष्ठा ocs_hcu_dma_list *ocs_hcu_dma_list_alloc(काष्ठा ocs_hcu_dev *hcu_dev,
						पूर्णांक max_nents);

व्योम ocs_hcu_dma_list_मुक्त(काष्ठा ocs_hcu_dev *hcu_dev,
			   काष्ठा ocs_hcu_dma_list *dma_list);

पूर्णांक ocs_hcu_dma_list_add_tail(काष्ठा ocs_hcu_dev *hcu_dev,
			      काष्ठा ocs_hcu_dma_list *dma_list,
			      dma_addr_t addr, u32 len);

पूर्णांक ocs_hcu_hash_init(काष्ठा ocs_hcu_hash_ctx *ctx, क्रमागत ocs_hcu_algo algo);

पूर्णांक ocs_hcu_hash_update(काष्ठा ocs_hcu_dev *hcu_dev,
			काष्ठा ocs_hcu_hash_ctx *ctx,
			स्थिर काष्ठा ocs_hcu_dma_list *dma_list);

पूर्णांक ocs_hcu_hash_finup(काष्ठा ocs_hcu_dev *hcu_dev,
		       स्थिर काष्ठा ocs_hcu_hash_ctx *ctx,
		       स्थिर काष्ठा ocs_hcu_dma_list *dma_list,
		       u8 *dgst, माप_प्रकार dgst_len);

पूर्णांक ocs_hcu_hash_final(काष्ठा ocs_hcu_dev *hcu_dev,
		       स्थिर काष्ठा ocs_hcu_hash_ctx *ctx, u8 *dgst,
		       माप_प्रकार dgst_len);

पूर्णांक ocs_hcu_digest(काष्ठा ocs_hcu_dev *hcu_dev, क्रमागत ocs_hcu_algo algo,
		   व्योम *data, माप_प्रकार data_len, u8 *dgst, माप_प्रकार dgst_len);

पूर्णांक ocs_hcu_hmac(काष्ठा ocs_hcu_dev *hcu_dev, क्रमागत ocs_hcu_algo algo,
		 स्थिर u8 *key, माप_प्रकार key_len,
		 स्थिर काष्ठा ocs_hcu_dma_list *dma_list,
		 u8 *dgst, माप_प्रकार dgst_len);

#पूर्ण_अगर /* _CRYPTO_OCS_HCU_H */
